File: ArrayList.kt (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("ArrayList")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("IMutableList")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("T")
                    RANGLE(">")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            DATA("data")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("MutableArray")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          literalConstant
                                                                            IntegerLiteral("10")
                                          RPAREN(")")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("used")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("0")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("version")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("0")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("iterator")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("IIterator")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("mutableIterator")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("mutableIterator")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("IMutableIterator")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        COLON(":")
        simpleIdentifier
          Identifier("IMutableIterator")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("index")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("0")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("myVersion")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("version")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        FUN("fun")
        simpleIdentifier
          Identifier("checkVersion")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              ifExpression
                                                IF("if")
                                                LPAREN("(")
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              simpleIdentifier
                                                                                Identifier("version")
                                                        equalityOperator
                                                          EXCL_EQ("!=")
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              simpleIdentifier
                                                                                Identifier("myVersion")
                                                RPAREN(")")
                                                NL("\n")
                                                controlStructureBody
                                                  statement
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  jumpExpression
                                                                                    THROW("throw")
                                                                                    expression
                                                                                      disjunction
                                                                                        conjunction
                                                                                          equality
                                                                                            comparison
                                                                                              infixOperation
                                                                                                elvisExpression
                                                                                                  infixFunctionCall
                                                                                                    rangeExpression
                                                                                                      additiveExpression
                                                                                                        multiplicativeExpression
                                                                                                          asExpression
                                                                                                            prefixUnaryExpression
                                                                                                              postfixUnaryExpression
                                                                                                                primaryExpression
                                                                                                                  simpleIdentifier
                                                                                                                    Identifier("ConcurrentModificationException")
                                                                                                                postfixUnarySuffix
                                                                                                                  callSuffix
                                                                                                                    valueArguments
                                                                                                                      LPAREN("(")
                                                                                                                      RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("next")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("checkVersion")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              ifExpression
                                                IF("if")
                                                LPAREN("(")
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              simpleIdentifier
                                                                                Identifier("hasNext")
                                                RPAREN(")")
                                                NL("\n")
                                                controlStructureBody
                                                  statement
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  jumpExpression
                                                                                    THROW("throw")
                                                                                    expression
                                                                                      disjunction
                                                                                        conjunction
                                                                                          equality
                                                                                            comparison
                                                                                              infixOperation
                                                                                                elvisExpression
                                                                                                  infixFunctionCall
                                                                                                    rangeExpression
                                                                                                      additiveExpression
                                                                                                        multiplicativeExpression
                                                                                                          asExpression
                                                                                                            prefixUnaryExpression
                                                                                                              postfixUnaryExpression
                                                                                                                primaryExpression
                                                                                                                  simpleIdentifier
                                                                                                                    Identifier("NoMoreElementsException")
                                                                                                                postfixUnarySuffix
                                                                                                                  callSuffix
                                                                                                                    valueArguments
                                                                                                                      LPAREN("(")
                                                                                                                      RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                DATA("data")
                                            postfixUnarySuffix
                                              indexingSuffix
                                                LSQUARE("[")
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              simpleIdentifier
                                                                                Identifier("index")
                                                                            postfixUnarySuffix
                                                                              postfixUnaryOperator
                                                                                INCR("++")
                                                RSQUARE("]")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("hasNext")
        NL("\n")
        getter
          GETTER("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          simpleIdentifier
                                            Identifier("index")
                      comparisonOperator
                        LANGLE("<")
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          simpleIdentifier
                                            Identifier("used")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            memberModifier
              OVERRIDE("override")
        FUN("fun")
        simpleIdentifier
          Identifier("remove")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("checkVersion")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("result")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("ArrayList")
                              DOT(".")
                              THIS("this")
                              DOT(".")
                        simpleIdentifier
                          Identifier("remove")
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      parenthesizedExpression
                                        LPAREN("(")
                                        expression
                                          disjunction
                                            conjunction
                                              equality
                                                comparison
                                                  infixOperation
                                                    elvisExpression
                                                      infixFunctionCall
                                                        rangeExpression
                                                          additiveExpression
                                                            multiplicativeExpression
                                                              asExpression
                                                                prefixUnaryExpression
                                                                  postfixUnaryExpression
                                                                    primaryExpression
                                                                      simpleIdentifier
                                                                        Identifier("index")
                                                            additiveOperator
                                                              SUB("-")
                                                            multiplicativeExpression
                                                              asExpression
                                                                prefixUnaryExpression
                                                                  postfixUnaryExpression
                                                                    primaryExpression
                                                                      literalConstant
                                                                        IntegerLiteral("1")
                                        RPAREN(")")
    semis
      NL("\n")
  Identifier("myVersion")
  ASSIGNMENT("=")
  Identifier("version")
  NL("\n")
  Identifier("result")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  FUN("fun")
  GETTER("get")
  LPAREN("(")
  Identifier("index")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("checkIndex")
  LPAREN("(")
  Identifier("index")
  RPAREN(")")
  NL("\n")
  DATA("data")
  LSQUARE("[")
  Identifier("index")
  RSQUARE("]")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  PRIVATE("private")
  FUN("fun")
  Identifier("checkIndex")
  LPAREN("(")
  Identifier("index")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("index")
  RANGLE(">")
  Identifier("used")
  RPAREN(")")
  NL("\n")
  THROW("throw")
  Identifier("IndexOutOfBoundsException")
  LPAREN("(")
  Identifier("index")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  VAL("val")
  Identifier("isEmpty")
  NL("\n")
  GETTER("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("used")
  EQEQ("==")
  IntegerLiteral("0")
  NL("\n")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  VAL("val")
  Identifier("size")
  NL("\n")
  GETTER("get")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("used")
  NL("\n")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  FUN("fun")
  SETTER("set")
  LPAREN("(")
  Identifier("index")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  Identifier("value")
  COLON(":")
  Identifier("T")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("checkIndex")
  LPAREN("(")
  Identifier("index")
  RPAREN(")")
  NL("\n")
  VAR("var")
  Identifier("result")
  ASSIGNMENT("=")
  DATA("data")
  LSQUARE("[")
  Identifier("index")
  RSQUARE("]")
  NL("\n")
  DATA("data")
  LSQUARE("[")
  Identifier("index")
  RSQUARE("]")
  ASSIGNMENT("=")
  Identifier("value")
  NL("\n")
  Identifier("result")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  FUN("fun")
  Identifier("add")
  LPAREN("(")
  Identifier("index")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  Identifier("value")
  COLON(":")
  Identifier("T")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("ensureSize")
  LPAREN("(")
  Identifier("used")
  ADD("+")
  IntegerLiteral("1")
  RPAREN(")")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("index")
  EQEQ("==")
  Identifier("used")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  DATA("data")
  LSQUARE("[")
  Identifier("used")
  INCR("++")
  RSQUARE("]")
  ASSIGNMENT("=")
  Identifier("value")
  NL("\n")
  RCURL("}")
  ELSE("else")
  IF("if")
  LPAREN("(")
  Identifier("index")
  LANGLE("<")
  Identifier("used")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  FOR("for")
  LPAREN("(")
  Identifier("i")
  IN("in")
  Identifier("used")
  SUB("-")
  IntegerLiteral("1")
  RANGE("..")
  Identifier("index")
  RPAREN(")")
  NL("\n")
  DATA("data")
  LSQUARE("[")
  Identifier("i")
  ADD("+")
  IntegerLiteral("1")
  RSQUARE("]")
  ASSIGNMENT("=")
  DATA("data")
  LSQUARE("[")
  Identifier("i")
  RSQUARE("]")
  NL("\n")
  DATA("data")
  LSQUARE("[")
  Identifier("index")
  RSQUARE("]")
  ASSIGNMENT("=")
  Identifier("value")
  NL("\n")
  Identifier("used")
  INCR("++")
  NL("\n")
  RCURL("}")
  ELSE("else")
  THROW("throw")
  Identifier("IndexOutOfBoundsException")
  LPAREN("(")
  Identifier("index")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  FUN("fun")
  Identifier("remove")
  LPAREN("(")
  Identifier("index")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  FOR("for")
  LPAREN("(")
  Identifier("i")
  IN("in")
  Identifier("index")
  RANGE("..")
  Identifier("used")
  SUB("-")
  IntegerLiteral("1")
  RPAREN(")")
  NL("\n")
  DATA("data")
  LSQUARE("[")
  Identifier("i")
  RSQUARE("]")
  ASSIGNMENT("=")
  DATA("data")
  LSQUARE("[")
  Identifier("i")
  ADD("+")
  IntegerLiteral("1")
  RSQUARE("]")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
