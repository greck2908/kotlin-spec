File: With.kt (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INLINE("inline")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("with")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("receiver")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("T")
          COMMA(",")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("body")
              COLON(":")
              type
                functionType
                  receiverType
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
                  DOT(".")
                  functionTypeParameters
                    LPAREN("(")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("receiver")
                                      postfixUnarySuffix
                                        navigationSuffix
                                          memberAccessOperator
                                            DOT(".")
                                          simpleIdentifier
                                            Identifier("body")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("example")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  Identifier("with")
  LPAREN("(")
  Identifier("java")
  DOT(".")
  Identifier("lang")
  DOT(".")
  Identifier("System")
  DOT(".")
  OUT("out")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("println")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("foo")
  QUOTE_CLOSE(""")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  Identifier("print")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("bar")
  QUOTE_CLOSE(""")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  Identifier("System")
  DOT(".")
  OUT("out")
  DOT(".")
  LCURL("{")
  NL("\n")
  Identifier("println")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("foo")
  QUOTE_CLOSE(""")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  Identifier("print")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("bar")
  QUOTE_CLOSE(""")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RCURL("}")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
