File: validDeclarations.kt
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      OPEN("open")
          annotation
            multiAnnotation
              AT("@")
              LSQUARE("[")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ann1")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      IntegerLiteral("1")
                    RPAREN(")")
              RSQUARE("]")
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ann2")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("1")
                                                        QUOTE_CLOSE(""")
                    RPAREN(")")
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ann3")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("2")
                                                        QUOTE_CLOSE(""")
                    RPAREN(")")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              modifiers
                annotation
                  singleAnnotation
                    AT("@")
                    unescapedAnnotation
                      constructorInvocation
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Volatile")
                        valueArguments
                          LPAREN("(")
                          valueArgument
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          literalConstant
                                                            IntegerLiteral("1")
                          RPAREN(")")
                modifier
                  visibilityModifier
                    PRIVATE("private")
              VAL("val")
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeModifiers
                  typeModifier
                    annotation
                      singleAnnotation
                        AT("@")
                        unescapedAnnotation
                          constructorInvocation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("AnnType")
                            valueArguments
                              LPAREN("(")
                              valueArgument
                                expression
                                  disjunction
                                    conjunction
                                      equality
                                        comparison
                                          infixOperation
                                            elvisExpression
                                              infixFunctionCall
                                                rangeExpression
                                                  additiveExpression
                                                    multiplicativeExpression
                                                      asExpression
                                                        prefixUnaryExpression
                                                          postfixUnaryExpression
                                                            primaryExpression
                                                              stringLiteral
                                                                lineStringLiteral
                                                                  QUOTE_OPEN(""")
                                                                  lineStringContent
                                                                    LineStrText("3")
                                                                  QUOTE_CLOSE(""")
                              RPAREN(")")
                  typeModifier
                    annotation
                      singleAnnotation
                        AT("@")
                        unescapedAnnotation
                          userType
                            simpleUserType
                              simpleIdentifier
                                OPEN("open")
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            COMMA(",")
            classParameter
              modifiers
                annotation
                  singleAnnotation
                    AT("@")
                    unescapedAnnotation
                      userType
                        simpleUserType
                          simpleIdentifier
                            PRIVATE("private")
              VAR("var")
              simpleIdentifier
                Identifier("y")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            COMMA(",")
            classParameter
              modifiers
                annotation
                  singleAnnotation
                    AT("@")
                    unescapedAnnotation
                      userType
                        simpleUserType
                          simpleIdentifier
                            OPEN("open")
              simpleIdentifier
                Identifier("z")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      PRIVATE("private")
          annotation
            multiAnnotation
              AT("@")
              LSQUARE("[")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ann3")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      IntegerLiteral("2")
                    RPAREN(")")
              RSQUARE("]")
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Ann4")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    stringLiteral
                                                      lineStringLiteral
                                                        QUOTE_OPEN(""")
                                                        lineStringContent
                                                          LineStrText("4")
                                                        QUOTE_CLOSE(""")
                    RPAREN(")")
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                annotation
                  singleAnnotation
                    AT("@")
                    unescapedAnnotation
                      userType
                        simpleUserType
                          simpleIdentifier
                            DATA("data")
                declaration
                  classDeclaration
                    CLASS("class")
                    simpleIdentifier
                      Identifier("LocalClass")
              semis
                NL("\n")
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("print")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  literalConstant
                                                                                    IntegerLiteral("1")
                                                  RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                annotation
                  singleAnnotation
                    AT("@")
                    unescapedAnnotation
                      constructorInvocation
                        userType
                          simpleUserType
                            simpleIdentifier
                              INLINE("inline")
                        valueArguments
                          LPAREN("(")
                          valueArgument
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          simpleIdentifier
                                                            Identifier("option1")
                          COMMA(",")
                          valueArgument
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          simpleIdentifier
                                                            Identifier("option2")
                          RPAREN(")")
                  NL("\n")
                  NL("\n")
                annotation
                  multiAnnotation
                    AT("@")
                    LSQUARE("[")
                    unescapedAnnotation
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("inline2")
                    RSQUARE("]")
                declaration
                  functionDeclaration
                    modifiers
                      modifier
                        visibilityModifier
                          PRIVATE("private")
                        NL("\n")
                    FUN("fun")
                    simpleIdentifier
                      Identifier("inlineLocal")
                    functionValueParameters
                      LPAREN("(")
                      RPAREN(")")
                    functionBody
                      block
                        LCURL("{")
                        statements
                        RCURL("}")
              semis
                NL("\n")
                NL("\n")
              statement
                annotation
                  multiAnnotation
                    AT("@")
                    LSQUARE("[")
                    unescapedAnnotation
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Ann")
                    RSQUARE("]")
                  NL("\n")
                declaration
                  propertyDeclaration
                    modifiers
                      modifier
                        visibilityModifier
                          PRIVATE("private")
                        NL("\n")
                      annotation
                        singleAnnotation
                          AT("@")
                          unescapedAnnotation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  ABSTRACT("abstract")
                        NL("\n")
                      annotation
                        singleAnnotation
                          AT("@")
                          unescapedAnnotation
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Volatile")
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  literalConstant
                                                    IntegerLiteral("1")
                    NL("\n")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("foo")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  valueArgument
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  functionLiteral
                                                                                    anonymousFunction
                                                                                      FUN("fun")
                                                                                      functionValueParameters
                                                                                        LPAREN("(")
                                                                                        functionValueParameter
                                                                                          modifiers
                                                                                            annotation
                                                                                              singleAnnotation
                                                                                                AT("@")
                                                                                                unescapedAnnotation
                                                                                                  userType
                                                                                                    simpleUserType
                                                                                                      simpleIdentifier
                                                                                                        VARARG("vararg")
                                                                                            annotation
                                                                                              singleAnnotation
                                                                                                AT("@")
                                                                                                unescapedAnnotation
                                                                                                  constructorInvocation
                                                                                                    userType
                                                                                                      simpleUserType
                                                                                                        simpleIdentifier
                                                                                                          Identifier("ann")
                                                                                                    valueArguments
                                                                                                      LPAREN("(")
                                                                                                      valueArgument
                                                                                                        expression
                                                                                                          disjunction
                                                                                                            conjunction
                                                                                                              equality
                                                                                                                comparison
                                                                                                                  infixOperation
                                                                                                                    elvisExpression
                                                                                                                      infixFunctionCall
                                                                                                                        rangeExpression
                                                                                                                          additiveExpression
                                                                                                                            multiplicativeExpression
                                                                                                                              asExpression
                                                                                                                                prefixUnaryExpression
                                                                                                                                  postfixUnaryExpression
                                                                                                                                    primaryExpression
                                                                                                                                      literalConstant
                                                                                                                                        IntegerLiteral("1")
                                                                                                      RPAREN(")")
                                                                                          parameter
                                                                                            simpleIdentifier
                                                                                              Identifier("x")
                                                                                            COLON(":")
                                                                                            type
                                                                                              typeReference
                                                                                                userType
                                                                                                  simpleUserType
                                                                                                    simpleIdentifier
                                                                                                      Identifier("Int")
                                                                                        RPAREN(")")
                                                                                      functionBody
                                                                                        block
                                                                                          LCURL("{")
                                                                                          statements
                                                                                          RCURL("}")
                                                  RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
    semis
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("inject")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      LSQUARE("[")
  topLevelObject
    declaration
  topLevelObject
    declaration
      INLINE("inline")
      RSQUARE("]")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PRIVATE("private")
  topLevelObject
    declaration
      AT("@")
  topLevelObject
    declaration
      OPEN("open")
      GETTER("get")
      LPAREN("(")
      RPAREN(")")
      ASSIGNMENT("=")
      IntegerLiteral("1")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
  topLevelObject
    declaration
      OPEN("open")
  topLevelObject
    declaration
      AT("@")
      Identifier("ann")
      INIT("init")
      LCURL("{")
      RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      COMPANION("companion")
        OBJECT("object")
        NL("\n")
        NL("\n")
        simpleIdentifier
          AT("@")
          COMPANION("companion")
  topLevelObject
    declaration
      objectDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      PRIVATE("private")
        OBJECT("object")
        simpleIdentifier
          Identifier("B")
    semis
      SEMICOLON(";")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("main")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
  topLevelObject
    declaration
      PRIVATE("private")
    semis
      NL("\n")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  FUN("fun")
  LANGLE("<")
  AT("@")
  Identifier("ann")
  LPAREN("(")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  RPAREN(")")
  AT("@")
  LSQUARE("[")
  Identifier("ann")
  RSQUARE("]")
  Identifier("T")
  COLON(":")
  Identifier("R")
  RANGLE(">")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  AT("@")
  PRIVATE("private")
  VAL("val")
  Identifier("x")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  NL("\n")
  AT("@")
  INLINE("inline")
  PRIVATE("private")
  FUN("fun")
  Identifier("bar")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("bar")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  TRY("try")
  LCURL("{")
  RCURL("}")
  NL("\n")
  CATCH("catch")
  LPAREN("(")
  AT("@")
  Identifier("Volatile")
  Identifier("e")
  COLON(":")
  Identifier("Exception")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
