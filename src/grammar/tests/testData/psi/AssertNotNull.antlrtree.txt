File: AssertNotNull.kt
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("args")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Array")
                      typeArguments
                        LANGLE("<")
                        typeProjection
                          type
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("String")
                        RANGLE(">")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  EXCL_NO_WS("!")
  BooleanLiteral("true")
  SEMICOLON(";")
  NL("\n")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  BooleanLiteral("true")
  SEMICOLON(";")
  NL("\n")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  BooleanLiteral("true")
  SEMICOLON(";")
  NL("\n")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  BooleanLiteral("true")
  SEMICOLON(";")
  NL("\n")
  BooleanLiteral("true")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  NL("\n")
  BooleanLiteral("true")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  NL("\n")
  BooleanLiteral("true")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  Identifier("and")
  LPAREN("(")
  BooleanLiteral("false")
  RPAREN(")")
  NL("\n")
  BooleanLiteral("true")
  EXCL_NO_WS("!")
  EXCL_NO_WS("!")
  DOT(".")
  Identifier("and")
  LPAREN("(")
  BooleanLiteral("false")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
