File: NewlinesInParentheses.kt
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("a")
                            additiveOperator
                              ADD("+")
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("b")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("a")
                            additiveOperator
                              ADD("+")
                            NL("\n")
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("b")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("a")
    semis
      NL("\n")
  ADD("+")
  Identifier("b")
  NL("\n")
  VAL("val")
  Identifier("a")
  ASSIGNMENT("=")
  LPAREN("(")
  Identifier("a")
  ADD("+")
  Identifier("b")
  RPAREN(")")
  NL("\n")
  VAL("val")
  Identifier("a")
  ASSIGNMENT("=")
  LPAREN("(")
  LCURL("{")
  Identifier("a")
  NL("\n")
  ADD("+")
  Identifier("b")
  RCURL("}")
  RPAREN(")")
  NL("\n")
  VAL("val")
  Identifier("a")
  ASSIGNMENT("=")
  LPAREN("(")
  LCURL("{")
  Identifier("a")
  NL("\n")
  ADD("+")
  Identifier("b")
  RCURL("}")
  ADD("+")
  Identifier("b")
  RPAREN(")")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("a")
  ASSIGNMENT("=")
  Identifier("b")
  LSQUARE("[")
  Identifier("c")
  ADD("+")
  Identifier("d")
  RSQUARE("]")
  NL("\n")
  VAL("val")
  Identifier("a")
  ASSIGNMENT("=")
  Identifier("b")
  LSQUARE("[")
  LCURL("{")
  Identifier("c")
  NL("\n")
  ADD("+")
  Identifier("d")
  RCURL("}")
  RSQUARE("]")
  NL("\n")
  VAL("val")
  Identifier("a")
  ASSIGNMENT("=")
  Identifier("b")
  LSQUARE("[")
  LCURL("{")
  Identifier("c")
  NL("\n")
  ADD("+")
  Identifier("d")
  RCURL("}")
  ADD("+")
  Identifier("d")
  RSQUARE("]")
  NL("\n")
  NL("\n")
  WHEN("when")
  LPAREN("(")
  Identifier("e")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IS("is")
  Identifier("T")
  NL("\n")
  LANGLE("<")
  Identifier("X")
  RANGLE(">")
  NL("\n")
  ARROW("->")
  Identifier("a")
  NL("\n")
  IN("in")
  Identifier("f")
  NL("\n")
  LPAREN("(")
  RPAREN(")")
  ARROW("->")
  Identifier("a")
  NL("\n")
  NOT_IS("!is ")
  Identifier("T")
  NL("\n")
  LANGLE("<")
  Identifier("X")
  RANGLE(">")
  ARROW("->")
  Identifier("a")
  NL("\n")
  NOT_IN("!in ")
  Identifier("f")
  NL("\n")
  LPAREN("(")
  RPAREN(")")
  ARROW("->")
  Identifier("a")
  NL("\n")
  Identifier("f")
  NL("\n")
  LPAREN("(")
  RPAREN(")")
  ARROW("->")
  Identifier("a")
  NL("\n")
  RCURL("}")
  NL("\n")
  VAL("val")
  Identifier("f")
  ASSIGNMENT("=")
  Identifier("a")
  IS("is")
  Identifier("T")
  NL("\n")
  LANGLE("<")
  Identifier("X")
  RANGLE(">")
  NL("\n")
  RCURL("}")
