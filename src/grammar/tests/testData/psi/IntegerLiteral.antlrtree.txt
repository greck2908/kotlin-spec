File: IntegerLiteral.kt
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("array")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("array")
                                    postfixUnarySuffix
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Any")
                                        RANGLE(">")
                                    postfixUnarySuffix
                                      callSuffix
                                    postfixUnarySuffix
                                      callSuffix
                                        LPAREN("(")
                                        IntegerLiteral("1")
                                        COMMA(",")
                                        HexLiteral("0x1")
                                        COMMA(",")
                                        HexLiteral("0X1")
                                        COMMA(",")
                                        BinLiteral("0b1")
                                        COMMA(",")
                                        BinLiteral("0B1")
                                        COMMA(",")
                                        LongLiteral("1L")
                                        COMMA(",")
                                        LongLiteral("0x1L")
                                        COMMA(",")
                                        LongLiteral("0X1L")
                                        COMMA(",")
                                        LongLiteral("0b1L")
                                        COMMA(",")
                                        LongLiteral("0B1L")
                                        COMMA(",")
                                        IntegerLiteral("1")
        Identifier("l")
        COMMA(",")
        HexLiteral("0x1")
        Identifier("l")
        COMMA(",")
        HexLiteral("0X1")
        Identifier("l")
        COMMA(",")
        BinLiteral("0b1")
        Identifier("l")
        COMMA(",")
        BinLiteral("0B1")
        Identifier("l")
        COMMA(",")
        IntegerLiteral("0")
        COMMA(",")
        IntegerLiteral("1_2")
        COMMA(",")
        IntegerLiteral("12__34")
        COMMA(",")
        HexLiteral("0x1_2_3_4")
        COMMA(",")
        BinLiteral("0B0")
        COMMA(",")
        BinLiteral("0b0001_0010_0100_1000")
        COMMA(",")
        LongLiteral("1_2L")
        COMMA(",")
        IntegerLiteral("12__34")
        Identifier("l")
        COMMA(",")
        LongLiteral("0x1_2_3_4L")
        COMMA(",")
        LongLiteral("0B0L")
        COMMA(",")
        BinLiteral("0b0001_0010_0100_1000")
        Identifier("l")
        COMMA(",")
        HexLiteral("0xa_af1")
        COMMA(",")
        HexLiteral("0xa_af_1")
        RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("a")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("0")
                              IntegerLiteral("1")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
