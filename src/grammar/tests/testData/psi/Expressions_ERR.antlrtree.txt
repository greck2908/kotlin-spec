File: Expressions_ERR.kt
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("f")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      ifExpression
                                        IF("if")
                                        LPAREN("(")
                                        expression
                                          disjunction
                                            conjunction
                                              equality
                                                comparison
                                                  infixOperation
                                                    elvisExpression
                                                      infixFunctionCall
                                                        rangeExpression
                                                          additiveExpression
                                                            multiplicativeExpression
                                                              asExpression
                                                                prefixUnaryExpression
                                                                  postfixUnaryExpression
                                                                    primaryExpression
                                                                      literalConstant
                                                                        BooleanLiteral("true")
                                        RPAREN(")")
                                        controlStructureBody
                                          statement
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          jumpExpression
                                                                            RETURN("return")
                                        ELSE("else")
                                        controlStructureBody
                                          LCURL("{")
        NL("\n")
        Identifier("dfsd")
    semis
      NL("\n")
  RPAREN(")")
  DOUBLE_SEMICOLON(";;")
  SEMICOLON(";")
  RPAREN(")")
  DOUBLE_SEMICOLON(";;")
  SEMICOLON(";")
  ErrorCharacter("~")
  DOUBLE_SEMICOLON(";;")
  SEMICOLON(";")
  NL("\n")
  Identifier("srgsdfg")
  NL("\n")
  NL("\n")
  ErrorCharacter("~")
  NL("\n")
  NL("\n")
  RSQUARE("]")
  NL("\n")
  RCURL("}")
  NL("\n")
