File: WhenWithExpression.kt
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("List")
        typeParameters
          LANGLE("<")
          typeParameter
            typeParameterModifiers
              typeParameterModifier
                varianceModifier
                  OUT("out")
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("size")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              companionObject
                COMPANION("companion")
                OBJECT("object")
                classBody
                  LCURL("{")
                  NL("\n")
                  classMemberDeclarations
                    classMemberDeclaration
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("Nil")
                          ASSIGNMENT("=")
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    infixOperation
                                      elvisExpression
                                        infixFunctionCall
                                          rangeExpression
                                            additiveExpression
                                              multiplicativeExpression
                                                asExpression
                                                  prefixUnaryExpression
                                                    postfixUnaryExpression
                                                      primaryExpression
                                                        simpleIdentifier
                                                          Identifier("List")
                                                      postfixUnarySuffix
                                                        typeArguments
                                                          LANGLE("<")
                                                          typeProjection
                                                            type
                                                              typeReference
                                                                userType
                                                                  simpleUserType
                                                                    simpleIdentifier
                                                                      Identifier("Nothing")
                                                          RANGLE(">")
                                                      postfixUnarySuffix
                                                        callSuffix
                                                          valueArguments
                                                            LPAREN("(")
                                                            valueArgument
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            literalConstant
                                                                                              IntegerLiteral("0")
                                                            RPAREN(")")
                          NL("\n")
                  RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("String")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("join")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          NL("\n")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        whenExpression
                                          WHEN("when")
                                          whenSubject
                                            LPAREN("(")
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          simpleIdentifier
                                                                            Identifier("this")
                                            RPAREN(")")
                                          LCURL("{")
                                          NL("\n")
                                          whenEntry
                                            whenCondition
                                              expression
                                                disjunction
                                                  conjunction
                                                    equality
                                                      comparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            simpleIdentifier
                                                                              Identifier("List")
                                                                          postfixUnarySuffix
                                                                            navigationSuffix
                                                                              memberAccessOperator
                                                                                DOT(".")
                                                                              simpleIdentifier
                                                                                Identifier("Nil")
                                            ARROW("->")
                                            controlStructureBody
                                              statement
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              stringLiteral
                                                                                lineStringLiteral
                                                                                  QUOTE_OPEN(""")
                                                                                  lineStringContent
                                                                                    LineStrText("[]")
                                                                                  QUOTE_CLOSE(""")
                                            semi
                                              NL("\n")
                                          whenEntry
                                            ELSE("else")
                                            ARROW("->")
                                            controlStructureBody
                                              statement
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              stringLiteral
                                                                                lineStringLiteral
                                                                                  QUOTE_OPEN(""")
                                                                                  QUOTE_CLOSE(""")
                                            semi
                                              NL("\n")
                                          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
