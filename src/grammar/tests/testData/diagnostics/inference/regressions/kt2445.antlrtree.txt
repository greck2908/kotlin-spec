File: kt2445.kt
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("test")
                                            postfixUnarySuffix
                                              callSuffix
                                                annotatedLambda
                                                  lambdaLiteral
                                                    LCURL("{")
                                                    NL("\n")
                                                    NL("\n")
                                                    statements
                                                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("R")
          RANGLE(">")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("callback")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("R")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Unit")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Unit")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("callback")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            valueArgument
                                              expression
                                                disjunction
                                                  conjunction
                                                    equality
                                                      comparison
                                                        infixOperation
                                                          elvisExpression
                                                            infixFunctionCall
                                                              rangeExpression
                                                                additiveExpression
                                                                  multiplicativeExpression
                                                                    asExpression
                                                                      prefixUnaryExpression
                                                                        postfixUnaryExpression
                                                                          primaryExpression
                                                                            literalConstant
                                                                              NullLiteral("null")
                                                                          postfixUnarySuffix
                                                                            postfixUnaryOperator
                                                                              EXCL_NO_WS("!")
                                                                              excl
                                                                                EXCL_NO_WS("!")
                                            RPAREN(")")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
