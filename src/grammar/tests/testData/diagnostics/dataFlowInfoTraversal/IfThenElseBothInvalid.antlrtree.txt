File: IfThenElseBothInvalid.kt (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Int")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Int")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("x")
                              additiveOperator
                                ADD("+")
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("1")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("x")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Int")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        NullLiteral("null")
    semis
      NL("\n")
      NL("\n")
  Identifier("bar")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("x")
  EXCL_EQ("!=")
  IntegerLiteral("2")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("x")
  EQEQ("==")
  NullLiteral("null")
  RPAREN(")")
  RETURN("return")
  NL("\n")
  IntegerLiteral("2")
  ADD("+")
  NL("\n")
  RCURL("}")
  NL("\n")
  ELSE("else")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("x")
  EQEQ("==")
  NullLiteral("null")
  RPAREN(")")
  RETURN("return")
  NL("\n")
  IntegerLiteral("2")
  ADD("+")
  NL("\n")
  RCURL("}")
  NL("\n")
  Identifier("bar")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
