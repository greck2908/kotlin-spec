File: GenericIterator.kt
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("java")
        DOT(".")
        simpleIdentifier
          Identifier("util")
        DOT(".")
        simpleIdentifier
          Identifier("Enumeration")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("java")
              DOT(".")
              simpleUserType
                simpleIdentifier
                  Identifier("util")
              DOT(".")
              simpleUserType
                simpleIdentifier
                  Identifier("Enumeration")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        simpleIdentifier
          Identifier("iterator")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        objectLiteral
                                          OBJECT("object")
                                          COLON(":")
                                          delegationSpecifiers
                                            annotatedDelegationSpecifier
                                              delegationSpecifier
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("Iterator")
                                                    typeArguments
                                                      LANGLE("<")
                                                      typeProjection
                                                        type
                                                          typeReference
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("T")
                                                      RANGLE(">")
                                          classBody
                                            LCURL("{")
                                            NL("\n")
                                            classMemberDeclarations
                                              classMemberDeclaration
                                                declaration
                                                  functionDeclaration
                                                    modifiers
                                                      modifier
                                                        memberModifier
                                                          OVERRIDE("override")
                                                    FUN("fun")
                                                    simpleIdentifier
                                                      Identifier("hasNext")
                                                    functionValueParameters
                                                      LPAREN("(")
                                                      RPAREN(")")
                                                    COLON(":")
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Boolean")
                                                    functionBody
                                                      ASSIGNMENT("=")
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("hasMoreElements")
                                                                                  postfixUnarySuffix
                                                                                    callSuffix
                                                                                      valueArguments
                                                                                        LPAREN("(")
                                                                                        RPAREN(")")
                                              semis
                                                NL("\n")
                                                NL("\n")
                                              classMemberDeclaration
                                                declaration
                                                  functionDeclaration
                                                    modifiers
                                                      modifier
                                                        memberModifier
                                                          OVERRIDE("override")
                                                    FUN("fun")
                                                    simpleIdentifier
                                                      Identifier("next")
                                                    functionValueParameters
                                                      LPAREN("(")
                                                      RPAREN(")")
                                                    functionBody
                                                      ASSIGNMENT("=")
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("nextElement")
                                                                                  postfixUnarySuffix
                                                                                    callSuffix
                                                                                      valueArguments
                                                                                        LPAREN("(")
                                                                                        RPAREN(")")
                                              semis
                                                NL("\n")
                                            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("MyIterator")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        classBody
          LCURL("{")
          NL("\n")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("hasNext")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Boolean")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("next")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("T")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              OPERATOR("operator")
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
          RANGLE(">")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("T")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("iterator")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        objectLiteral
                                          OBJECT("object")
                                          COLON(":")
                                          delegationSpecifiers
                                            annotatedDelegationSpecifier
                                              delegationSpecifier
                                                userType
                                                  simpleUserType
                                                    simpleIdentifier
                                                      Identifier("MyIterator")
                                                    typeArguments
                                                      LANGLE("<")
                                                      typeProjection
                                                        type
                                                          typeReference
                                                            userType
                                                              simpleUserType
                                                                simpleIdentifier
                                                                  Identifier("T")
                                                      RANGLE(">")
                                          classBody
                                            LCURL("{")
                                            NL("\n")
                                            classMemberDeclarations
                                              classMemberDeclaration
                                                declaration
                                                  propertyDeclaration
                                                    VAR("var")
                                                    variableDeclaration
                                                      simpleIdentifier
                                                        Identifier("hasNext")
                                                    ASSIGNMENT("=")
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  thisExpression
                                                                                    THIS_AT("this@iterator")
                                                            equalityOperator
                                                              EXCL_EQ("!=")
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  literalConstant
                                                                                    NullLiteral("null")
                                                    NL("\n")
                                                    setter
                                                      modifiers
                                                        modifier
                                                          visibilityModifier
                                                            PRIVATE("private")
                                                      SETTER("set")
                                              semis
                                                NL("\n")
                                              classMemberDeclaration
                                                declaration
                                                  functionDeclaration
                                                    modifiers
                                                      modifier
                                                        memberModifier
                                                          OVERRIDE("override")
                                                    FUN("fun")
                                                    simpleIdentifier
                                                      Identifier("hasNext")
                                                    functionValueParameters
                                                      LPAREN("(")
                                                      RPAREN(")")
                                                    functionBody
                                                      ASSIGNMENT("=")
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("hasNext")
                                              semis
                                                NL("\n")
                                                NL("\n")
                                              classMemberDeclaration
                                                declaration
                                                  functionDeclaration
                                                    modifiers
                                                      modifier
                                                        memberModifier
                                                          OVERRIDE("override")
                                                    FUN("fun")
                                                    simpleIdentifier
                                                      Identifier("next")
                                                    functionValueParameters
                                                      LPAREN("(")
                                                      RPAREN(")")
                                                    COLON(":")
                                                    type
                                                      typeReference
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("T")
                                                    functionBody
                                                      block
                                                        LCURL("{")
                                                        NL("\n")
                                                        statements
                                                          statement
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          ifExpression
                                                                                            IF("if")
                                                                                            LPAREN("(")
                                                                                            expression
                                                                                              disjunction
                                                                                                conjunction
                                                                                                  equality
                                                                                                    comparison
                                                                                                      infixOperation
                                                                                                        elvisExpression
                                                                                                          infixFunctionCall
                                                                                                            rangeExpression
                                                                                                              additiveExpression
                                                                                                                multiplicativeExpression
                                                                                                                  asExpression
                                                                                                                    prefixUnaryExpression
                                                                                                                      postfixUnaryExpression
                                                                                                                        primaryExpression
                                                                                                                          simpleIdentifier
                                                                                                                            Identifier("hasNext")
                                                                                            RPAREN(")")
                                                                                            controlStructureBody
                                                                                              block
                                                                                                LCURL("{")
                                                                                                NL("\n")
                                                                                                statements
                                                                                                  statement
                                                                                                    assignment
                                                                                                      directlyAssignableExpression
                                                                                                        simpleIdentifier
                                                                                                          Identifier("hasNext")
                                                                                                      ASSIGNMENT("=")
                                                                                                      expression
                                                                                                        disjunction
                                                                                                          conjunction
                                                                                                            equality
                                                                                                              comparison
                                                                                                                infixOperation
                                                                                                                  elvisExpression
                                                                                                                    infixFunctionCall
                                                                                                                      rangeExpression
                                                                                                                        additiveExpression
                                                                                                                          multiplicativeExpression
                                                                                                                            asExpression
                                                                                                                              prefixUnaryExpression
                                                                                                                                postfixUnaryExpression
                                                                                                                                  primaryExpression
                                                                                                                                    literalConstant
                                                                                                                                      BooleanLiteral("false")
                                                                                                  semis
                                                                                                    NL("\n")
                                                                                                  statement
                                                                                                    expression
                                                                                                      disjunction
                                                                                                        conjunction
                                                                                                          equality
                                                                                                            comparison
                                                                                                              infixOperation
                                                                                                                elvisExpression
                                                                                                                  infixFunctionCall
                                                                                                                    rangeExpression
                                                                                                                      additiveExpression
                                                                                                                        multiplicativeExpression
                                                                                                                          asExpression
                                                                                                                            prefixUnaryExpression
                                                                                                                              postfixUnaryExpression
                                                                                                                                primaryExpression
                                                                                                                                  jumpExpression
                                                                                                                                    RETURN("return")
                                                                                                                                    expression
                                                                                                                                      disjunction
                                                                                                                                        conjunction
                                                                                                                                          equality
                                                                                                                                            comparison
                                                                                                                                              infixOperation
                                                                                                                                                elvisExpression
                                                                                                                                                  infixFunctionCall
                                                                                                                                                    rangeExpression
                                                                                                                                                      additiveExpression
                                                                                                                                                        multiplicativeExpression
                                                                                                                                                          asExpression
                                                                                                                                                            prefixUnaryExpression
                                                                                                                                                              postfixUnaryExpression
                                                                                                                                                                primaryExpression
                                                                                                                                                                  thisExpression
                                                                                                                                                                    THIS_AT("this@iterator")
                                                                                                                                                                postfixUnarySuffix
                                                                                                                                                                  postfixUnaryOperator
                                                                                                                                                                    EXCL_NO_WS("!")
                                                                                                                                                                    excl
                                                                                                                                                                      EXCL_NO_WS("!")
                                                                                                  semis
                                                                                                    NL("\n")
                                                                                                RCURL("}")
                                                          semis
                                                            NL("\n")
                                                          statement
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          jumpExpression
                                                                                            THROW("throw")
                                                                                            expression
                                                                                              disjunction
                                                                                                conjunction
                                                                                                  equality
                                                                                                    comparison
                                                                                                      infixOperation
                                                                                                        elvisExpression
                                                                                                          infixFunctionCall
                                                                                                            rangeExpression
                                                                                                              additiveExpression
                                                                                                                multiplicativeExpression
                                                                                                                  asExpression
                                                                                                                    prefixUnaryExpression
                                                                                                                      postfixUnaryExpression
                                                                                                                        primaryExpression
                                                                                                                          simpleIdentifier
                                                                                                                            Identifier("java")
                                                                                                                        postfixUnarySuffix
                                                                                                                          navigationSuffix
                                                                                                                            memberAccessOperator
                                                                                                                              DOT(".")
                                                                                                                            simpleIdentifier
                                                                                                                              Identifier("util")
                                                                                                                        postfixUnarySuffix
                                                                                                                          navigationSuffix
                                                                                                                            memberAccessOperator
                                                                                                                              DOT(".")
                                                                                                                            simpleIdentifier
                                                                                                                              Identifier("NoSuchElementException")
                                                                                                                        postfixUnarySuffix
                                                                                                                          callSuffix
                                                                                                                            valueArguments
                                                                                                                              LPAREN("(")
                                                                                                                              RPAREN(")")
                                                          semis
                                                            NL("\n")
                                                        RCURL("}")
                                              semis
                                                NL("\n")
                                            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("i")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                          quest
                            QUEST_WS("? ")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  literalConstant
                                                    IntegerLiteral("1")
              semis
                NL("\n")
              statement
                loopStatement
                  forStatement
                    FOR("for")
                    LPAREN("(")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("x")
                    IN("in")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("i")
                    RPAREN(")")
                    controlStructureBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          simpleIdentifier
                                                            Identifier("System")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              OUT("out")
                                                        postfixUnarySuffix
                                                          navigationSuffix
                                                            memberAccessOperator
                                                              DOT(".")
                                                            simpleIdentifier
                                                              Identifier("println")
                                                        postfixUnarySuffix
                                                          callSuffix
                                                            valueArguments
                                                              LPAREN("(")
                                                              valueArgument
                                                                expression
                                                                  disjunction
                                                                    conjunction
                                                                      equality
                                                                        comparison
                                                                          infixOperation
                                                                            elvisExpression
                                                                              infixFunctionCall
                                                                                rangeExpression
                                                                                  additiveExpression
                                                                                    multiplicativeExpression
                                                                                      asExpression
                                                                                        prefixUnaryExpression
                                                                                          postfixUnaryExpression
                                                                                            primaryExpression
                                                                                              simpleIdentifier
                                                                                                Identifier("x")
                                                              RPAREN(")")
                          semis
                            NL("\n")
                        RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  EOF("<EOF>")
