File: visibility2.kt
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("makeA")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("A")
                                      postfixUnarySuffix
                                        callSuffix
                                          valueArguments
                                            LPAREN("(")
                                            RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        modifiers
          modifier
            visibilityModifier
              PRIVATE("private")
        OBJECT("object")
        simpleIdentifier
          Identifier("PO")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      PACKAGE("package")
      Identifier("b")
      NL("\n")
      NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("A")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("makeA")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("PO")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("test")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  VAL("val")
  Identifier("y")
  ASSIGNMENT("=")
  Identifier("makeA")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("y")
  DOT(".")
  Identifier("bar")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("u")
  COLON(":")
  Identifier("A")
  ASSIGNMENT("=")
  Identifier("A")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  VAL("val")
  Identifier("a")
  COLON(":")
  Identifier("java")
  DOT(".")
  Identifier("util")
  DOT(".")
  Identifier("Arrays")
  DOT(".")
  Identifier("ArrayList")
  LANGLE("<")
  Identifier("Int")
  RANGLE(">")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("po")
  ASSIGNMENT("=")
  Identifier("PO")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("B")
  COLON(":")
  Identifier("A")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("Q")
  LCURL("{")
  NL("\n")
  CLASS("class")
  Identifier("W")
  LCURL("{")
  NL("\n")
  FUN("fun")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  VAL("val")
  Identifier("y")
  ASSIGNMENT("=")
  Identifier("makeA")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("NewClass")
  COLON(":")
  Identifier("java")
  DOT(".")
  Identifier("util")
  DOT(".")
  Identifier("ArrayList")
  LANGLE("<")
  Identifier("Integer")
  RANGLE(">")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  PUBLIC("public")
  OVERRIDE("override")
  FUN("fun")
  Identifier("toString")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("a")
  QUOTE_CLOSE(""")
  NL("\n")
  RCURL("}")
  NL("\n")
