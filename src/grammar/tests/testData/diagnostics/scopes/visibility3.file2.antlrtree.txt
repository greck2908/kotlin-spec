File: visibility3.file2.kt
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("y")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("makeA")
                                                postfixUnarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("y")
                                            postfixUnarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("bar")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  RPAREN(")")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("foo")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("u")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("A")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("A")
                                                postfixUnarySuffix
                                                  callSuffix
                                                    valueArguments
                                                      LPAREN("(")
                                                      RPAREN(")")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("z")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("x")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    simpleIdentifier
                      Identifier("x")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  IntegerLiteral("30")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("po")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("PO")
                    NL("\n")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              constructorInvocation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("A")
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
        classBody
          LCURL("{")
          classMemberDeclarations
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Q")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("W")
                  classBody
                    LCURL("{")
                    NL("\n")
                    classMemberDeclarations
                      classMemberDeclaration
                        declaration
                          functionDeclaration
                            FUN("fun")
                            simpleIdentifier
                              Identifier("foo")
                            functionValueParameters
                              LPAREN("(")
                              RPAREN(")")
                            functionBody
                              block
                                LCURL("{")
                                NL("\n")
                                statements
                                  statement
                                    declaration
                                      propertyDeclaration
                                        VAL("val")
                                        variableDeclaration
                                          simpleIdentifier
                                            Identifier("y")
                                        ASSIGNMENT("=")
                                        expression
                                          disjunction
                                            conjunction
                                              equality
                                                comparison
                                                  infixOperation
                                                    elvisExpression
                                                      infixFunctionCall
                                                        rangeExpression
                                                          additiveExpression
                                                            multiplicativeExpression
                                                              asExpression
                                                                prefixUnaryExpression
                                                                  postfixUnaryExpression
                                                                    primaryExpression
                                                                      simpleIdentifier
                                                                        Identifier("makeA")
                                                                    postfixUnarySuffix
                                                                      callSuffix
                                                                        valueArguments
                                                                          LPAREN("(")
                                                                          RPAREN(")")
                                        NL("\n")
                                RCURL("}")
                      semis
                        NL("\n")
                    RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
