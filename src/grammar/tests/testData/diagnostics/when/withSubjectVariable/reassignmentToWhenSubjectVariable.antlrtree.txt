File: reassignmentToWhenSubjectVariable.kt
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Any")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          IntegerLiteral("42")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test1")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("x")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              whenExpression
                                                WHEN("when")
                                                whenSubject
                                                  LPAREN("(")
                                                  VAL("val")
                                                  variableDeclaration
                                                    simpleIdentifier
                                                      Identifier("y")
                                                  ASSIGNMENT("=")
                                                  expression
                                                    disjunction
                                                      conjunction
                                                        equality
                                                          comparison
                                                            infixOperation
                                                              elvisExpression
                                                                infixFunctionCall
                                                                  rangeExpression
                                                                    additiveExpression
                                                                      multiplicativeExpression
                                                                        asExpression
                                                                          prefixUnaryExpression
                                                                            postfixUnaryExpression
                                                                              primaryExpression
                                                                                simpleIdentifier
                                                                                  Identifier("foo")
                                                                              postfixUnarySuffix
                                                                                callSuffix
                                                                                  valueArguments
                                                                                    LPAREN("(")
                                                                                    RPAREN(")")
                                                  RPAREN(")")
                                                LCURL("{")
                                                NL("\n")
                                                whenEntry
                                                  whenCondition
                                                    typeTest
                                                      isOperator
                                                        IS("is")
                                                      type
                                                        typeReference
                                                          userType
                                                            simpleUserType
                                                              simpleIdentifier
                                                                Identifier("String")
                                                  ARROW("->")
                                                  controlStructureBody
                                                    statement
                                                      assignment
                                                        directlyAssignableExpression
                                                          simpleIdentifier
                                                            Identifier("y")
                                                        ASSIGNMENT("=")
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      stringLiteral
                                                                                        lineStringLiteral
                                                                                          QUOTE_OPEN(""")
                                                                                          QUOTE_CLOSE(""")
                                                  semi
                                                    NL("\n")
                                                RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
