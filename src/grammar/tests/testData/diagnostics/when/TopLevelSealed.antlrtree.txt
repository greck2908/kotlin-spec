File: TopLevelSealed.kt
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            classModifier
              SEALED("sealed")
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("B")
                  COLON(":")
                  delegationSpecifiers
                    annotatedDelegationSpecifier
                      delegationSpecifier
                        constructorInvocation
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("A")
                          valueArguments
                            LPAREN("(")
                            RPAREN(")")
                  classBody
                    LCURL("{")
                    NL("\n")
                    classMemberDeclarations
                      classMemberDeclaration
                        declaration
                          classDeclaration
                            CLASS("class")
                            simpleIdentifier
                              Identifier("C")
                            COLON(":")
                            delegationSpecifiers
                              annotatedDelegationSpecifier
                                delegationSpecifier
                                  constructorInvocation
                                    userType
                                      simpleUserType
                                        simpleIdentifier
                                          Identifier("A")
                                    valueArguments
                                      LPAREN("(")
                                      RPAREN(")")
                      semis
                        NL("\n")
                    RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("D")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              constructorInvocation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("A")
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("A")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("nonExhaustive")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  whenExpression
                                                    WHEN("when")
                                                    whenSubject
                                                      LPAREN("(")
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("a")
                                                      RPAREN(")")
                                                    LCURL("{")
                                                    NL("\n")
                                                    whenEntry
                                                      whenCondition
                                                        typeTest
                                                          isOperator
                                                            IS("is")
                                                          type
                                                            typeReference
                                                              userType
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("A")
                                                                DOT(".")
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("B")
                                                      ARROW("->")
                                                      controlStructureBody
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        stringLiteral
                                                                                          lineStringLiteral
                                                                                            QUOTE_OPEN(""")
                                                                                            lineStringContent
                                                                                              LineStrText("B")
                                                                                            QUOTE_CLOSE(""")
                                                      semi
                                                        NL("\n")
                                                    whenEntry
                                                      whenCondition
                                                        typeTest
                                                          isOperator
                                                            IS("is")
                                                          type
                                                            typeReference
                                                              userType
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("A")
                                                                DOT(".")
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("B")
                                                                DOT(".")
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("C")
                                                      ARROW("->")
                                                      controlStructureBody
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        stringLiteral
                                                                                          lineStringLiteral
                                                                                            QUOTE_OPEN(""")
                                                                                            lineStringContent
                                                                                              LineStrText("C")
                                                                                            QUOTE_CLOSE(""")
                                                      semi
                                                        NL("\n")
                                                    RCURL("}")
                    NL("\n")
              semis
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("exhaustive")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  whenExpression
                                                    WHEN("when")
                                                    whenSubject
                                                      LPAREN("(")
                                                      expression
                                                        disjunction
                                                          conjunction
                                                            equality
                                                              comparison
                                                                infixOperation
                                                                  elvisExpression
                                                                    infixFunctionCall
                                                                      rangeExpression
                                                                        additiveExpression
                                                                          multiplicativeExpression
                                                                            asExpression
                                                                              prefixUnaryExpression
                                                                                postfixUnaryExpression
                                                                                  primaryExpression
                                                                                    simpleIdentifier
                                                                                      Identifier("a")
                                                      RPAREN(")")
                                                    LCURL("{")
                                                    NL("\n")
                                                    whenEntry
                                                      whenCondition
                                                        typeTest
                                                          isOperator
                                                            IS("is")
                                                          type
                                                            typeReference
                                                              userType
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("A")
                                                                DOT(".")
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("B")
                                                      ARROW("->")
                                                      controlStructureBody
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        stringLiteral
                                                                                          lineStringLiteral
                                                                                            QUOTE_OPEN(""")
                                                                                            lineStringContent
                                                                                              LineStrText("B")
                                                                                            QUOTE_CLOSE(""")
                                                      semi
                                                        NL("\n")
                                                    whenEntry
                                                      whenCondition
                                                        typeTest
                                                          isOperator
                                                            IS("is")
                                                          type
                                                            typeReference
                                                              userType
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("A")
                                                                DOT(".")
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("B")
                                                                DOT(".")
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("C")
                                                      ARROW("->")
                                                      controlStructureBody
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        stringLiteral
                                                                                          lineStringLiteral
                                                                                            QUOTE_OPEN(""")
                                                                                            lineStringContent
                                                                                              LineStrText("C")
                                                                                            QUOTE_CLOSE(""")
                                                      semi
                                                        NL("\n")
                                                    whenEntry
                                                      whenCondition
                                                        typeTest
                                                          isOperator
                                                            IS("is")
                                                          type
                                                            typeReference
                                                              userType
                                                                simpleUserType
                                                                  simpleIdentifier
                                                                    Identifier("D")
                                                      ARROW("->")
                                                      controlStructureBody
                                                        statement
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        stringLiteral
                                                                                          lineStringLiteral
                                                                                            QUOTE_OPEN(""")
                                                                                            lineStringContent
                                                                                              LineStrText("D")
                                                                                            QUOTE_CLOSE(""")
                                                      semi
                                                        NL("\n")
                                                    RCURL("}")
                    NL("\n")
            RCURL("}")
    semis
      EOF("<EOF>")
  EOF("<EOF>")
