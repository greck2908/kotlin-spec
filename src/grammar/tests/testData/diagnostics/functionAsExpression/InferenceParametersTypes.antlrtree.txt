File: InferenceParametersTypes.kt (WITH_ERRORS)
  NL("\n")
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("listOf")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("List")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          NullLiteral("null")
                                      postfixUnarySuffix
                                        postfixUnaryOperator
                                          EXCL_NO_WS("!")
                                          excl
                                            EXCL_NO_WS("!")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("test")
  LPAREN("(")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          parenthesizedType
            LPAREN("(")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("x")
            RPAREN(")")
        ASSIGNMENT("=")
        IntegerLiteral("4")
        RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  Identifier("test")
  LPAREN("(")
  FUN("fun")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("x")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("test")
  LPAREN("(")
  FUN("fun")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  COLON(":")
  Identifier("Int")
  LCURL("{")
  Identifier("checkSubtype")
  LANGLE("<")
  Identifier("Int")
  RANGLE(">")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  SEMICOLON(";")
  RETURN("return")
  IntegerLiteral("4")
  RCURL("}")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("test2")
  LPAREN("(")
  Identifier("a")
  COLON(":")
  LPAREN("(")
  RPAREN(")")
  ARROW("->")
  Identifier("List")
  LANGLE("<")
  Identifier("Int")
  RANGLE(">")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("test2")
  LPAREN("(")
  FUN("fun")
  LPAREN("(")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("listOf")
  LPAREN("(")
  RPAREN(")")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("a")
  COLON(":")
  LPAREN("(")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  ASSIGNMENT("=")
  FUN("fun")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  LCURL("{")
  Identifier("checkSubtype")
  LANGLE("<")
  Identifier("Int")
  RANGLE(">")
  LPAREN("(")
  Identifier("x")
  RPAREN(")")
  RCURL("}")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("b")
  COLON(":")
  LPAREN("(")
  Identifier("Int")
  RPAREN(")")
  ARROW("->")
  Identifier("Unit")
  ASSIGNMENT("=")
  FUN("fun")
  LPAREN("(")
  Identifier("x")
  COLON(":")
  Identifier("String")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
