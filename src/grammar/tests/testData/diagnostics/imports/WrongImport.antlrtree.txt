File: WrongImport.kt
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
      DOT(".")
      simpleIdentifier
        Identifier("b")
    semi
      NL("\n")
      NL("\n")
      NL("\n")
      PACKAGE("package")
      Identifier("a")
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      objectLiteral
                                        OBJECT("object")
                                        classBody
                                          LCURL("{")
                                          NL("\n")
                                          classMemberDeclarations
                                            classMemberDeclaration
                                              declaration
                                                functionDeclaration
                                                  FUN("fun")
                                                  simpleIdentifier
                                                    Identifier("bar")
                                                  functionValueParameters
                                                    LPAREN("(")
                                                    RPAREN(")")
                                                  functionBody
                                                    block
                                                      LCURL("{")
                                                      statements
                                                      RCURL("}")
                                            semis
                                              NL("\n")
                                          RCURL("}")
        NL("\n")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        objectLiteral
                                          OBJECT("object")
                                          classBody
                                            LCURL("{")
                                            NL("\n")
                                            classMemberDeclarations
                                              classMemberDeclaration
                                                declaration
                                                  propertyDeclaration
                                                    VAL("val")
                                                    variableDeclaration
                                                      simpleIdentifier
                                                        Identifier("foo")
                                                    ASSIGNMENT("=")
                                                    expression
                                                      disjunction
                                                        conjunction
                                                          equality
                                                            comparison
                                                              infixOperation
                                                                elvisExpression
                                                                  infixFunctionCall
                                                                    rangeExpression
                                                                      additiveExpression
                                                                        multiplicativeExpression
                                                                          asExpression
                                                                            prefixUnaryExpression
                                                                              postfixUnaryExpression
                                                                                primaryExpression
                                                                                  literalConstant
                                                                                    IntegerLiteral("239")
                                                    NL("\n")
                                            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("foo")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                objectLiteral
                                                  OBJECT("object")
                                                  classBody
                                                    LCURL("{")
                                                    NL("\n")
                                                    classMemberDeclarations
                                                      classMemberDeclaration
                                                        declaration
                                                          functionDeclaration
                                                            FUN("fun")
                                                            simpleIdentifier
                                                              Identifier("bar")
                                                            functionValueParameters
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                            functionBody
                                                              block
                                                                LCURL("{")
                                                                statements
                                                                RCURL("}")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
                  NL("\n")
                  NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  objectLiteral
                                                    OBJECT("object")
                                                    classBody
                                                      LCURL("{")
                                                      NL("\n")
                                                      classMemberDeclarations
                                                        classMemberDeclaration
                                                          declaration
                                                            propertyDeclaration
                                                              VAL("val")
                                                              variableDeclaration
                                                                simpleIdentifier
                                                                  Identifier("foo")
                                                              ASSIGNMENT("=")
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            literalConstant
                                                                                              IntegerLiteral("239")
                                                              NL("\n")
                                                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("C")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("foo")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                objectLiteral
                                                  OBJECT("object")
                                                  classBody
                                                    LCURL("{")
                                                    NL("\n")
                                                    classMemberDeclarations
                                                      classMemberDeclaration
                                                        declaration
                                                          functionDeclaration
                                                            FUN("fun")
                                                            simpleIdentifier
                                                              Identifier("bar")
                                                            functionValueParameters
                                                              LPAREN("(")
                                                              RPAREN(")")
                                                            functionBody
                                                              block
                                                                LCURL("{")
                                                                statements
                                                                RCURL("}")
                                                      semis
                                                        NL("\n")
                                                    RCURL("}")
                  NL("\n")
                  NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  objectLiteral
                                                    OBJECT("object")
                                                    classBody
                                                      LCURL("{")
                                                      NL("\n")
                                                      classMemberDeclarations
                                                        classMemberDeclaration
                                                          declaration
                                                            propertyDeclaration
                                                              VAL("val")
                                                              variableDeclaration
                                                                simpleIdentifier
                                                                  Identifier("foo")
                                                              ASSIGNMENT("=")
                                                              expression
                                                                disjunction
                                                                  conjunction
                                                                    equality
                                                                      comparison
                                                                        infixOperation
                                                                          elvisExpression
                                                                            infixFunctionCall
                                                                              rangeExpression
                                                                                additiveExpression
                                                                                  multiplicativeExpression
                                                                                    asExpression
                                                                                      prefixUnaryExpression
                                                                                        postfixUnaryExpression
                                                                                          primaryExpression
                                                                                            literalConstant
                                                                                              IntegerLiteral("239")
                                                              NL("\n")
                                                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("Nested")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("D")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              companionObject
                COMPANION("companion")
                OBJECT("object")
                classBody
                  LCURL("{")
                  NL("\n")
                  classMemberDeclarations
                    classMemberDeclaration
                      declaration
                        propertyDeclaration
                          VAL("val")
                          variableDeclaration
                            simpleIdentifier
                              Identifier("foo")
                          ASSIGNMENT("=")
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    infixOperation
                                      elvisExpression
                                        infixFunctionCall
                                          rangeExpression
                                            additiveExpression
                                              multiplicativeExpression
                                                asExpression
                                                  prefixUnaryExpression
                                                    postfixUnaryExpression
                                                      primaryExpression
                                                        objectLiteral
                                                          OBJECT("object")
                                                          classBody
                                                            LCURL("{")
                                                            NL("\n")
                                                            classMemberDeclarations
                                                              classMemberDeclaration
                                                                declaration
                                                                  functionDeclaration
                                                                    FUN("fun")
                                                                    simpleIdentifier
                                                                      Identifier("bar")
                                                                    functionValueParameters
                                                                      LPAREN("(")
                                                                      RPAREN(")")
                                                                    functionBody
                                                                      block
                                                                        LCURL("{")
                                                                        statements
                                                                        RCURL("}")
                                                              semis
                                                                NL("\n")
                                                            RCURL("}")
                          NL("\n")
                          NL("\n")
                    classMemberDeclaration
                      declaration
                        functionDeclaration
                          FUN("fun")
                          simpleIdentifier
                            Identifier("bar")
                          functionValueParameters
                            LPAREN("(")
                            RPAREN(")")
                          functionBody
                            ASSIGNMENT("=")
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          objectLiteral
                                                            OBJECT("object")
                                                            classBody
                                                              LCURL("{")
                                                              NL("\n")
                                                              classMemberDeclarations
                                                                classMemberDeclaration
                                                                  declaration
                                                                    propertyDeclaration
                                                                      VAL("val")
                                                                      variableDeclaration
                                                                        simpleIdentifier
                                                                          Identifier("foo")
                                                                      ASSIGNMENT("=")
                                                                      expression
                                                                        disjunction
                                                                          conjunction
                                                                            equality
                                                                              comparison
                                                                                infixOperation
                                                                                  elvisExpression
                                                                                    infixFunctionCall
                                                                                      rangeExpression
                                                                                        additiveExpression
                                                                                          multiplicativeExpression
                                                                                            asExpression
                                                                                              prefixUnaryExpression
                                                                                                postfixUnaryExpression
                                                                                                  primaryExpression
                                                                                                    literalConstant
                                                                                                      IntegerLiteral("239")
                                                                      NL("\n")
                                                              RCURL("}")
                    semis
                      NL("\n")
                  RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      IMPORT("import")
      Identifier("a")
      NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("foo")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("bar")
  DOT(".")
  Identifier("foo")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("foo")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("bar")
  DOT(".")
  Identifier("foo")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("C")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("C")
  DOT(".")
  Identifier("foo")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("C")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("C")
  DOT(".")
  Identifier("bar")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("C")
  DOT(".")
  Identifier("Nested")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("foo")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("bar")
  DOT(".")
  Identifier("foo")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("Companion")
  DOT(".")
  Identifier("foo")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("Companion")
  DOT(".")
  Identifier("foo")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("Companion")
  DOT(".")
  Identifier("bar")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("Companion")
  DOT(".")
  Identifier("bar")
  DOT(".")
  Identifier("foo")
