File: SyntaxError.kt
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("a")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("2")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("B")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("foo")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  IntegerLiteral("2")
                  NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  FUN("fun")
                  simpleIdentifier
                    Identifier("bar")
                  functionValueParameters
                    LPAREN("(")
                    RPAREN(")")
                  functionBody
                    block
                      LCURL("{")
                      statements
                      RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("C")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      PACKAGE("package")
      Identifier("a")
      DOT(".")
      Identifier("b")
      DOT(".")
      Identifier("c")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("D")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                classDeclaration
                  CLASS("class")
                  simpleIdentifier
                    Identifier("E")
                  classBody
                    LCURL("{")
                    NL("\n")
                    NL("\n")
                    classMemberDeclarations
                    RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
      NL("\n")
      IMPORT("import")
      SEMICOLON(";")
      NL("\n")
  IMPORT("import")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  DOT(".")
  Identifier("a")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  DOT(".")
  Identifier("a")
  DOT(".")
  Identifier("b")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  DOT(".")
  Identifier("a")
  DOT(".")
  Identifier("B")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("C")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("foo")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("bar")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  MOD("%")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  Identifier("D")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("E")
  DOT(".")
  SEMICOLON(";")
  NL("\n")
  NL("\n")
  NL("\n")
  IMPORT("import")
  NL("\n")
  IMPORT("import")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  NL("\n")
  IMPORT("import")
  DOT(".")
  Identifier("a")
  DOT(".")
  NL("\n")
  IMPORT("import")
  DOT(".")
  Identifier("a")
  DOT(".")
  Identifier("b")
  NL("\n")
  IMPORT("import")
  DOT(".")
  Identifier("a")
  DOT(".")
  Identifier("B")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  AS("as")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  AS("as")
  Identifier("A")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("C")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("foo")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("B")
  DOT(".")
  Identifier("bar")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  MOD("%")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  Identifier("D")
  DOT(".")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  DOT(".")
  Identifier("b")
  DOT(".")
  Identifier("c")
  DOT(".")
  Identifier("D")
  DOT(".")
  Identifier("E")
  DOT(".")
  NL("\n")
  NL("\n")
  IMPORT("import")
  Identifier("a")
  QUEST_NO_WS("?")
  DOT(".")
  Identifier("b")
