File: kt629.kt (WITH_ERRORS)
  NL("\n")
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("kt629")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAR("var")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("p")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                stringLiteral
                                                  lineStringLiteral
                                                    QUOTE_OPEN(""")
                                                    lineStringContent
                                                      LineStrText("yeah")
                                                    QUOTE_CLOSE(""")
                  NL("\n")
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("rem")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("other")
                        COLON(":")
                        type
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("A")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("A")
                  functionBody
                    block
                      LCURL("{")
                      NL("\n")
                      statements
                        statement
                          expression
                            disjunction
                              conjunction
                                equality
                                  comparison
                                    infixOperation
                                      elvisExpression
                                        infixFunctionCall
                                          rangeExpression
                                            additiveExpression
                                              multiplicativeExpression
                                                asExpression
                                                  prefixUnaryExpression
                                                    postfixUnaryExpression
                                                      primaryExpression
                                                        jumpExpression
                                                          RETURN("return")
                                                          expression
                                                            disjunction
                                                              conjunction
                                                                equality
                                                                  comparison
                                                                    infixOperation
                                                                      elvisExpression
                                                                        infixFunctionCall
                                                                          rangeExpression
                                                                            additiveExpression
                                                                              multiplicativeExpression
                                                                                asExpression
                                                                                  prefixUnaryExpression
                                                                                    postfixUnaryExpression
                                                                                      primaryExpression
                                                                                        simpleIdentifier
                                                                                          Identifier("A")
                                                                                      postfixUnarySuffix
                                                                                        callSuffix
                                                                                          valueArguments
                                                                                            LPAREN("(")
                                                                                            RPAREN(")")
                        semis
                          SEMICOLON(";")
                          NL("\n")
                      RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("box")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("c")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("A")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          RPAREN(")")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("d")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("c")
    semis
      SEMICOLON(";")
      NL("\n")
  Identifier("c")
  MOD_ASSIGNMENT("%=")
  Identifier("A")
  LPAREN("(")
  RPAREN(")")
  SEMICOLON(";")
  NL("\n")
  RETURN("return")
  LPAREN("(")
  Identifier("c")
  EXCL_EQ("!=")
  Identifier("d")
  RPAREN(")")
  CONJ("&&")
  LPAREN("(")
  Identifier("c")
  DOT(".")
  Identifier("p")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("yeah")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("box2")
  LPAREN("(")
  RPAREN(")")
  COLON(":")
  Identifier("Boolean")
  LCURL("{")
  NL("\n")
  VAR("var")
  Identifier("c")
  ASSIGNMENT("=")
  Identifier("A")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  RETURN("return")
  LPAREN("(")
  Identifier("c")
  DOT(".")
  Identifier("p")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("yeah")
  QUOTE_CLOSE(""")
  RPAREN(")")
  CONJ("&&")
  BooleanLiteral("true")
  NL("\n")
  RCURL("}")
  NL("\n")
