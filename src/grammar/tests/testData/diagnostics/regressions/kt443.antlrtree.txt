File: kt443.kt
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          modifier
            inheritanceModifier
              OPEN("open")
        CLASS("class")
        simpleIdentifier
          Identifier("M")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  modifiers
                    modifier
                      inheritanceModifier
                        OPEN("open")
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("b")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  IntegerLiteral("5")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("N")
        primaryConstructor
          classParameters
            LPAREN("(")
            RPAREN(")")
        COLON(":")
        delegationSpecifiers
          annotatedDelegationSpecifier
            delegationSpecifier
              constructorInvocation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("M")
                valueArguments
                  LPAREN("(")
                  RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("a")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  NL("\n")
                  getter
                    GETTER("get")
                    LPAREN("(")
                    RPAREN(")")
                    functionBody
                      block
                        LCURL("{")
                        NL("\n")
                        statements
                          statement
                            assignment
                              directlyAssignableExpression
                                postfixUnaryExpression
                                  primaryExpression
                                    superExpression
                                      SUPER("super")
                                assignableSuffix
                                  navigationSuffix
                                    memberAccessOperator
                                      DOT(".")
                                    simpleIdentifier
                                      Identifier("b")
                              ASSIGNMENT("=")
                              expression
                                disjunction
                                  conjunction
                                    equality
                                      comparison
                                        infixOperation
                                          elvisExpression
                                            infixFunctionCall
                                              rangeExpression
                                                additiveExpression
                                                  multiplicativeExpression
                                                    asExpression
                                                      prefixUnaryExpression
                                                        postfixUnaryExpression
                                                          primaryExpression
                                                            superExpression
                                                              SUPER("super")
                                                          postfixUnarySuffix
                                                            navigationSuffix
                                                              memberAccessOperator
                                                                DOT(".")
                                                              simpleIdentifier
                                                                Identifier("b")
                                                  additiveOperator
                                                    ADD("+")
                                                  multiplicativeExpression
                                                    asExpression
                                                      prefixUnaryExpression
                                                        postfixUnaryExpression
                                                          primaryExpression
                                                            literalConstant
                                                              IntegerLiteral("1")
                          semis
                            NL("\n")
                          statement
                            expression
                              disjunction
                                conjunction
                                  equality
                                    comparison
                                      infixOperation
                                        elvisExpression
                                          infixFunctionCall
                                            rangeExpression
                                              additiveExpression
                                                multiplicativeExpression
                                                  asExpression
                                                    prefixUnaryExpression
                                                      postfixUnaryExpression
                                                        primaryExpression
                                                          jumpExpression
                                                            RETURN("return")
                                                            expression
                                                              disjunction
                                                                conjunction
                                                                  equality
                                                                    comparison
                                                                      infixOperation
                                                                        elvisExpression
                                                                          infixFunctionCall
                                                                            rangeExpression
                                                                              additiveExpression
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          superExpression
                                                                                            SUPER("super")
                                                                                        postfixUnarySuffix
                                                                                          navigationSuffix
                                                                                            memberAccessOperator
                                                                                              DOT(".")
                                                                                            simpleIdentifier
                                                                                              Identifier("b")
                                                                                additiveOperator
                                                                                  ADD("+")
                                                                                multiplicativeExpression
                                                                                  asExpression
                                                                                    prefixUnaryExpression
                                                                                      postfixUnaryExpression
                                                                                        primaryExpression
                                                                                          literalConstant
                                                                                            IntegerLiteral("1")
                          semis
                            NL("\n")
                        RCURL("}")
            semis
              NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  modifiers
                    modifier
                      memberModifier
                        OVERRIDE("override")
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("b")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("a")
                                      additiveOperator
                                        ADD("+")
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  IntegerLiteral("1")
                  NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
