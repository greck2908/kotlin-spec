File: resolveAnnotatedLambdaArgument.kt
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Target")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("AnnotationTarget")
                                                  postfixUnarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("EXPRESSION")
                    RPAREN(")")
            NL("\n")
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Retention")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("AnnotationRetention")
                                                  postfixUnarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("SOURCE")
                    RPAREN(")")
            NL("\n")
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Repeatable")
            NL("\n")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("Ann")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        simpleIdentifier
          Identifier("bar")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("block")
              COLON(":")
              type
                functionType
                  functionTypeParameters
                    LPAREN("(")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                    RPAREN(")")
                  ARROW("->")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("Int")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("bar")
                                            postfixUnarySuffix
                                              typeArguments
                                                LANGLE("<")
                                                typeProjection
                                                  type
                                                    typeReference
                                                      userType
                                                        simpleUserType
                                                          simpleIdentifier
                                                            Identifier("Int")
                                                RANGLE(">")
                                            postfixUnarySuffix
                                              callSuffix
                                                annotatedLambda
                                                  annotation
                                                    singleAnnotation
                                                      AT("@")
                                                      unescapedAnnotation
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Ann")
                                                  annotation
                                                    multiAnnotation
                                                      AT("@")
                                                      LSQUARE("[")
                                                      unescapedAnnotation
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Ann")
                                                      RSQUARE("]")
                                                  lambdaLiteral
                                                    LCURL("{")
                                                    lambdaParameters
                                                      lambdaParameter
                                                        variableDeclaration
                                                          simpleIdentifier
                                                            Identifier("x")
                                                    ARROW("->")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("x")
                                                    RCURL("}")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("bar")
                                            postfixUnarySuffix
                                              typeArguments
                                                LANGLE("<")
                                                typeProjection
                                                  type
                                                    typeReference
                                                      userType
                                                        simpleUserType
                                                          simpleIdentifier
                                                            Identifier("Int")
                                                RANGLE(">")
                                            postfixUnarySuffix
                                              callSuffix
                                                annotatedLambda
                                                  annotation
                                                    singleAnnotation
                                                      AT("@")
                                                      unescapedAnnotation
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Ann")
                                                  annotation
                                                    multiAnnotation
                                                      AT("@")
                                                      LSQUARE("[")
                                                      unescapedAnnotation
                                                        userType
                                                          simpleUserType
                                                            simpleIdentifier
                                                              Identifier("Ann")
                                                      RSQUARE("]")
                                                  label
                                                    IdentifierAt("label@")
                                                  lambdaLiteral
                                                    LCURL("{")
                                                    lambdaParameters
                                                      lambdaParameter
                                                        variableDeclaration
                                                          simpleIdentifier
                                                            Identifier("x")
                                                    ARROW("->")
                                                    statements
                                                      statement
                                                        expression
                                                          disjunction
                                                            conjunction
                                                              equality
                                                                comparison
                                                                  infixOperation
                                                                    elvisExpression
                                                                      infixFunctionCall
                                                                        rangeExpression
                                                                          additiveExpression
                                                                            multiplicativeExpression
                                                                              asExpression
                                                                                prefixUnaryExpression
                                                                                  postfixUnaryExpression
                                                                                    primaryExpression
                                                                                      simpleIdentifier
                                                                                        Identifier("x")
                                                    RCURL("}")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
