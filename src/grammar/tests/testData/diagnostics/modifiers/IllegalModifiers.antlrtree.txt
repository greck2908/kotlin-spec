File: IllegalModifiers.kt (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
  topLevelObject
    declaration
      AT("@")
      Identifier("myAnnotation")
  topLevelObject
    declaration
  topLevelObject
    declaration
      PUBLIC("public")
    semis
      NL("\n")
  PACKAGE("package")
  Identifier("illegal_modifiers")
  NL("\n")
  NL("\n")
  ABSTRACT("abstract")
  CLASS("class")
  Identifier("A")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  ABSTRACT("abstract")
  FINAL("final")
  FUN("fun")
  Identifier("f")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  ABSTRACT("abstract")
  OPEN("open")
  FUN("fun")
  Identifier("g")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  FINAL("final")
  OPEN("open")
  FUN("fun")
  Identifier("h")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  OPEN("open")
  VAR("var")
  Identifier("r")
  COLON(":")
  Identifier("String")
  NL("\n")
  GETTER("get")
  NL("\n")
  ABSTRACT("abstract")
  PROTECTED("protected")
  SETTER("set")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FINAL("final")
  INTERFACE("interface")
  Identifier("T")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("FinalClass")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  OPEN("open")
  FUN("fun")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  VAL("val")
  Identifier("i")
  COLON(":")
  Identifier("Int")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  OPEN("open")
  GETTER("get")
  LPAREN("(")
  RPAREN(")")
  COLON(":")
  Identifier("Int")
  ASSIGNMENT("=")
  Identifier("field")
  NL("\n")
  VAR("var")
  Identifier("j")
  COLON(":")
  Identifier("Int")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  OPEN("open")
  SETTER("set")
  LPAREN("(")
  Identifier("v")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  PRIVATE("private")
  PUBLIC("public")
  CLASS("class")
  Identifier("C")
  NL("\n")
  PRIVATE("private")
  PUBLIC("public")
  OBJECT("object")
  Identifier("D")
  NL("\n")
  NL("\n")
  NL("\n")
  ANNOTATION("annotation")
  CLASS("class")
  Identifier("annotated")
  LPAREN("(")
  VAL("val")
  Identifier("text")
  COLON(":")
  Identifier("String")
  ASSIGNMENT("=")
  QUOTE_OPEN(""")
  LineStrText("not given")
  QUOTE_CLOSE(""")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("LegalModifier")
  LPAREN("(")
  VAL("val")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  AT("@")
  Identifier("annotated")
  PRIVATE("private")
  VAR("var")
  Identifier("b")
  COLON(":")
  Identifier("String")
  COMMA(",")
  AT("@")
  Identifier("annotated")
  VARARG("vararg")
  Identifier("v")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers1")
  LPAREN("(")
  IN("in")
  OUT("out")
  REIFIED("reified")
  ENUM("enum")
  PRIVATE("private")
  CONST("const")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers2")
  LPAREN("(")
  PRIVATE("private")
  ABSTRACT("abstract")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers3")
  LPAREN("(")
  AT("@")
  Identifier("annotated")
  PUBLIC("public")
  ABSTRACT("abstract")
  Identifier("b")
  COLON(":")
  Identifier("String")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers4")
  LPAREN("(")
  VAL("val")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  AT("@")
  Identifier("annotated")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("a text")
  QUOTE_CLOSE(""")
  RPAREN(")")
  PROTECTED("protected")
  VARARG("vararg")
  Identifier("v")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  ABSTRACT("abstract")
  CLASS("class")
  Identifier("IllegalModifiers5")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  NL("\n")
  ABSTRACT("abstract")
  FUN("fun")
  Identifier("foo")
  LPAREN("(")
  PUBLIC("public")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  VARARG("vararg")
  Identifier("v")
  COLON(":")
  Identifier("String")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  ABSTRACT("abstract")
  FUN("fun")
  Identifier("bar")
  LPAREN("(")
  PUBLIC("public")
  ABSTRACT("abstract")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  COMMA(",")
  VARARG("vararg")
  Identifier("v")
  COLON(":")
  Identifier("String")
  RPAREN(")")
  NL("\n")
  NL("\n")
  NL("\n")
  ABSTRACT("abstract")
  FUN("fun")
  Identifier("baz")
  LPAREN("(")
  AT("@")
  Identifier("annotated")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("a text")
  QUOTE_CLOSE(""")
  RPAREN(")")
  PUBLIC("public")
  ABSTRACT("abstract")
  Identifier("a")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  NL("\n")
  NL("\n")
  PRIVATE("private")
  FUN("fun")
  Identifier("qux")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  NL("\n")
  TRY("try")
  LCURL("{")
  RCURL("}")
  CATCH("catch")
  LPAREN("(")
  IN("in")
  OUT("out")
  REIFIED("reified")
  ENUM("enum")
  PUBLIC("public")
  Identifier("e")
  COLON(":")
  Identifier("Exception")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  TRY("try")
  LCURL("{")
  RCURL("}")
  CATCH("catch")
  LPAREN("(")
  IN("in")
  OUT("out")
  REIFIED("reified")
  ENUM("enum")
  ABSTRACT("abstract")
  PUBLIC("public")
  Identifier("e")
  COLON(":")
  Identifier("Exception")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  TRY("try")
  LCURL("{")
  RCURL("}")
  CATCH("catch")
  LPAREN("(")
  AT("@")
  Identifier("annotated")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("a text")
  QUOTE_CLOSE(""")
  RPAREN(")")
  ABSTRACT("abstract")
  PUBLIC("public")
  Identifier("e")
  COLON(":")
  Identifier("Exception")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  ABSTRACT("abstract")
  CLASS("class")
  Identifier("IllegalModifiers6")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  PUBLIC("public")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  PRIVATE("private")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  PROTECTED("protected")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  VARARG("vararg")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  ABSTRACT("abstract")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  OPEN("open")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  FINAL("final")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  PUBLIC("public")
  AT("@")
  Identifier("annotated")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  PRIVATE("private")
  AT("@")
  Identifier("IllegalModifiers6")
  LPAREN("(")
  RPAREN(")")
  INIT("init")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  OVERRIDE("override")
  NL("\n")
  OUT("out")
  NL("\n")
  IN("in")
  NL("\n")
  VARARG("vararg")
  NL("\n")
  REIFIED("reified")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers7")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  ENUM("enum")
  NL("\n")
  INNER("inner")
  NL("\n")
  ANNOTATION("annotation")
  NL("\n")
  OUT("out")
  NL("\n")
  IN("in")
  NL("\n")
  VARARG("vararg")
  NL("\n")
  REIFIED("reified")
  NL("\n")
  VAL("val")
  Identifier("x")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  ENUM("enum")
  NL("\n")
  INNER("inner")
  NL("\n")
  ANNOTATION("annotation")
  NL("\n")
  OUT("out")
  NL("\n")
  IN("in")
  NL("\n")
  VARARG("vararg")
  NL("\n")
  REIFIED("reified")
  NL("\n")
  CONST("const")
  NL("\n")
  FUN("fun")
  Identifier("foo")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers8")
  LCURL("{")
  NL("\n")
  ABSTRACT("abstract")
  NL("\n")
  ENUM("enum")
  NL("\n")
  OPEN("open")
  NL("\n")
  INNER("inner")
  NL("\n")
  ANNOTATION("annotation")
  NL("\n")
  OVERRIDE("override")
  NL("\n")
  OUT("out")
  NL("\n")
  IN("in")
  NL("\n")
  FINAL("final")
  NL("\n")
  VARARG("vararg")
  NL("\n")
  REIFIED("reified")
  NL("\n")
  CONST("const")
  NL("\n")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  PRIVATE("private")
  ENUM("enum")
  ABSTRACT("abstract")
  Identifier("x")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers9")
  LCURL("{")
  NL("\n")
  PRIVATE("private")
  PROTECTED("protected")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  PRIVATE("private")
  INTERNAL("internal")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  Identifier("x")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers10")
  NL("\n")
  ABSTRACT("abstract")
  NL("\n")
  ENUM("enum")
  NL("\n")
  OPEN("open")
  NL("\n")
  INNER("inner")
  NL("\n")
  ANNOTATION("annotation")
  NL("\n")
  OVERRIDE("override")
  NL("\n")
  OUT("out")
  NL("\n")
  IN("in")
  NL("\n")
  FINAL("final")
  NL("\n")
  VARARG("vararg")
  NL("\n")
  REIFIED("reified")
  NL("\n")
  CONST("const")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("IllegalModifiers11")
  PRIVATE("private")
  PROTECTED("protected")
  CONSTRUCTOR("constructor")
  LPAREN("(")
  RPAREN(")")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("Outer")
  LCURL("{")
  NL("\n")
  INNER("inner")
  SEALED("sealed")
  CLASS("class")
  Identifier("Inner")
  NL("\n")
  RCURL("}")
  NL("\n")
