File: qualifiedJavaClassReferenceInKClassExtension.kt
  NL("\n")
  NL("\n")
  packageHeader
  importList
    importHeader
      IMPORT("import")
      identifier
        simpleIdentifier
          Identifier("kotlin")
        DOT(".")
        simpleIdentifier
          Identifier("reflect")
        DOT(".")
        simpleIdentifier
          Identifier("KClass")
      semi
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("KClass")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        variableDeclaration
          simpleIdentifier
            Identifier("java")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Class")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("T")
                    RANGLE(">")
        getter
          GETTER("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          literalConstant
                                            NullLiteral("null")
                                        postfixUnarySuffix
                                          postfixUnaryOperator
                                            EXCL_NO_WS("!")
                                            excl
                                              EXCL_NO_WS("!")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
            COLON(":")
            type
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("KClass")
                typeArguments
                  LANGLE("<")
                  typeProjection
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("T")
                  RANGLE(">")
        DOT(".")
        variableDeclaration
          simpleIdentifier
            Identifier("foo")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Any")
              quest
                QUEST_NO_WS("?")
        NL("\n")
        getter
          GETTER("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              NL("\n")
              statements
                statement
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                jumpExpression
                                                  RETURN("return")
                                                  expression
                                                    disjunction
                                                      conjunction
                                                        equality
                                                          comparison
                                                            infixOperation
                                                              elvisExpression
                                                                infixFunctionCall
                                                                  rangeExpression
                                                                    additiveExpression
                                                                      multiplicativeExpression
                                                                        asExpression
                                                                          prefixUnaryExpression
                                                                            postfixUnaryExpression
                                                                              primaryExpression
                                                                                callableReference
                                                                                  receiverType
                                                                                    typeReference
                                                                                      userType
                                                                                        simpleUserType
                                                                                          simpleIdentifier
                                                                                            Identifier("java")
                                                                                        DOT(".")
                                                                                        simpleUserType
                                                                                          simpleIdentifier
                                                                                            Identifier("lang")
                                                                                        DOT(".")
                                                                                        simpleUserType
                                                                                          simpleIdentifier
                                                                                            Identifier("Integer")
                                                                                  COLONCOLON("::")
                                                                                  simpleIdentifier
                                                                                    Identifier("hashCode")
                semis
                  NL("\n")
              RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
