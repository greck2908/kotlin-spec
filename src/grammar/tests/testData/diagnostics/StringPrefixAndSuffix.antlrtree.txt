File: StringPrefixAndSuffix.kt (WITH_ERRORS)
  NL("\n")
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              INFIX("infix")
        FUN("fun")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Any")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("foo")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            statements
            RCURL("}")
    semis
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              OPERATOR("operator")
        FUN("fun")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Any")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("contains")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("Boolean")
        functionBody
          ASSIGNMENT("=")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        literalConstant
                                          BooleanLiteral("true")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          functionValueParameter
            parameter
              simpleIdentifier
                Identifier("a")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Any")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  LineStrText("asd")
  QUOTE_CLOSE(""")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  LineStrRef("$a")
  QUOTE_CLOSE(""")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  LineStrText("asd")
  LineStrExprStart("${")
  Identifier("a")
  RCURL("}")
  LineStrText("sfsa")
  QUOTE_CLOSE(""")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  TRIPLE_QUOTE_OPEN(""""")
  MultiLineStrText("sdf")
  TRIPLE_QUOTE_CLOSE(""""")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  CharacterLiteral("'d'")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  SINGLE_QUOTE("'")
  SINGLE_QUOTE("'")
  NL("\n")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  LineStrText("asd")
  QUOTE_CLOSE(""")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  LineStrRef("$a")
  QUOTE_CLOSE(""")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  LineStrText("asd")
  LineStrExprStart("${")
  Identifier("a")
  RCURL("}")
  LineStrText("sfsa")
  QUOTE_CLOSE(""")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  TRIPLE_QUOTE_OPEN(""""")
  MultiLineStrText("sdf")
  TRIPLE_QUOTE_CLOSE(""""")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  CharacterLiteral("'d'")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  SINGLE_QUOTE("'")
  SINGLE_QUOTE("'")
  Identifier("foo")
  Identifier("a")
  NL("\n")
  NL("\n")
  Identifier("a")
  IN("in")
  QUOTE_OPEN(""")
  LineStrText("foo")
  QUOTE_CLOSE(""")
  NL("\n")
  Identifier("a")
  IN("in")
  TRIPLE_QUOTE_OPEN(""""")
  MultiLineStrText("foo")
  TRIPLE_QUOTE_CLOSE(""""")
  NL("\n")
  Identifier("a")
  IN("in")
  CharacterLiteral("'s'")
  NL("\n")
  Identifier("a")
  IN("in")
  SINGLE_QUOTE("'")
  SINGLE_QUOTE("'")
  NL("\n")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  IN("in")
  QUOTE_OPEN(""")
  LineStrText("foo")
  QUOTE_CLOSE(""")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  IN("in")
  TRIPLE_QUOTE_OPEN(""""")
  MultiLineStrText("foo")
  TRIPLE_QUOTE_CLOSE(""""")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  IN("in")
  CharacterLiteral("'s'")
  NL("\n")
  Identifier("a")
  EXCL_NO_WS("!")
  IN("in")
  SINGLE_QUOTE("'")
  SINGLE_QUOTE("'")
  NL("\n")
  NL("\n")
  IF("if")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("s")
  QUOTE_CLOSE(""")
  IS("is")
  Identifier("Any")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  IF("if")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("s")
  QUOTE_CLOSE(""")
  IS("is")
  Identifier("Any")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  Identifier("test")
  LPAREN("(")
  QUOTE_OPEN(""")
  LineStrText("s")
  QUOTE_CLOSE(""")
  AS("as")
  Identifier("Any")
  RPAREN(")")
  NL("\n")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  IntegerLiteral("1")
  NL("\n")
  Identifier("a")
  Identifier("foo")
  QUOTE_OPEN(""")
  QUOTE_CLOSE(""")
  RealLiteral("1.0")
  NL("\n")
  RCURL("}")
  EOF("<EOF>")
