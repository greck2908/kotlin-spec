File: prefixNullableClassIncrement.kt
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("MyClass")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            functionModifier
              OPERATOR("operator")
        FUN("fun")
        receiverType
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("MyClass")
            quest
              QUEST_NO_WS("?")
        DOT(".")
        simpleIdentifier
          Identifier("inc")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          nullableType
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("MyClass")
            quest
              QUEST_WS("? ")
        functionBody
          block
            LCURL("{")
            statements
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              jumpExpression
                                                RETURN("return")
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              literalConstant
                                                                                NullLiteral("null")
            RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          modifier
            visibilityModifier
              PUBLIC("public")
        FUN("fun")
        simpleIdentifier
          Identifier("box")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("i")
                      COLON(":")
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("MyClass")
                          quest
                            QUEST_WS("? ")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    simpleIdentifier
                      Identifier("i")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                simpleIdentifier
                                                  Identifier("MyClass")
                                              postfixUnarySuffix
                                                callSuffix
                                                  valueArguments
                                                    LPAREN("(")
                                                    RPAREN(")")
              semis
                NL("\n")
                NL("\n")
              statement
                declaration
                  propertyDeclaration
                    VAR("var")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("j")
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              unaryPrefix
                                                prefixUnaryOperator
                                                  INCR("++")
                                              postfixUnaryExpression
                                                primaryExpression
                                                  simpleIdentifier
                                                    Identifier("i")
                    NL("\n")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              simpleIdentifier
                                                Identifier("j")
                                            postfixUnarySuffix
                                              navigationSuffix
                                                memberAccessOperator
                                                  DOT(".")
                                                simpleIdentifier
                                                  Identifier("hashCode")
                                            postfixUnarySuffix
                                              callSuffix
                                                valueArguments
                                                  LPAREN("(")
                                                  RPAREN(")")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
