File: noErrorCheckForPackageLevelVal.kt
  NL("\n")
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("bar")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      propertyDeclaration
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("i")
          COLON(":")
          type
            nullableType
              typeReference
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("Int")
              quest
                QUEST_WS("? ")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      literalConstant
                                        IntegerLiteral("2")
    semis
      NL("\n")
      NL("\n")
      NL("\n")
  PACKAGE("package")
  Identifier("foo")
  NL("\n")
  NL("\n")
  VAL("val")
  Identifier("i")
  COLON(":")
  Identifier("Int")
  QUEST_WS("? ")
  ASSIGNMENT("=")
  IntegerLiteral("1")
  NL("\n")
  NL("\n")
  CLASS("class")
  Identifier("A")
  LPAREN("(")
  VAL("val")
  Identifier("i")
  COLON(":")
  Identifier("Int")
  QUEST_NO_WS("?")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  FUN("fun")
  Identifier("testUseFromClass")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("foo")
  DOT(".")
  Identifier("i")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("useInt")
  LPAREN("(")
  Identifier("i")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("testUseFromOtherPackage")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  IF("if")
  LPAREN("(")
  Identifier("bar")
  DOT(".")
  Identifier("i")
  EXCL_EQ("!=")
  NullLiteral("null")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  Identifier("useInt")
  LPAREN("(")
  Identifier("i")
  RPAREN(")")
  NL("\n")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("useInt")
  LPAREN("(")
  Identifier("i")
  COLON(":")
  Identifier("Int")
  RPAREN(")")
  ASSIGNMENT("=")
  Identifier("i")
