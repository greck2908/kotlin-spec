File: propertyInitializationWithPrimary.kt
  NL("\n")
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("A")
        primaryConstructor
          classParameters
            LPAREN("(")
            classParameter
              VAL("val")
              simpleIdentifier
                Identifier("w")
              COLON(":")
              type
                typeReference
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Char")
            RPAREN(")")
        classBody
          LCURL("{")
          NL("\n")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("x")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAR("var")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("y")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("z")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("v")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            unaryPrefix
                                              prefixUnaryOperator
                                                SUB("-")
                                            postfixUnaryExpression
                                              primaryExpression
                                                literalConstant
                                                  IntegerLiteral("1")
                  NL("\n")
                  NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("uninitialized")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  NL("\n")
            classMemberDeclaration
              declaration
                propertyDeclaration
                  VAL("val")
                  variableDeclaration
                    simpleIdentifier
                      Identifier("overinitialized")
                    COLON(":")
                    type
                      typeReference
                        userType
                          simpleUserType
                            simpleIdentifier
                              Identifier("Int")
                  NL("\n")
                  NL("\n")
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  RPAREN(")")
                COLON(":")
                constructorDelegationCall
                  THIS("this")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      CharacterLiteral("'a'")
                    RPAREN(")")
                block
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("y")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("1")
                    semis
                      NL("\n")
                      NL("\n")
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("overinitialized")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("2")
                    semis
                      NL("\n")
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("uninitialized")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("3")
                    semis
                      NL("\n")
                  RCURL("}")
            semis
              NL("\n")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              anonymousInitializer
                INIT("init")
                block
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("x")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("4")
                    semis
                      NL("\n")
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("z")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("5")
                    semis
                      NL("\n")
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("overinitialized")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("6")
                    semis
                      NL("\n")
                  RCURL("}")
            semis
              NL("\n")
              NL("\n")
            classMemberDeclaration
              secondaryConstructor
                CONSTRUCTOR("constructor")
                functionValueParameters
                  LPAREN("(")
                  functionValueParameter
                    parameter
                      simpleIdentifier
                        Identifier("a")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("Int")
                  RPAREN(")")
                COLON(":")
                constructorDelegationCall
                  THIS("this")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    literalConstant
                                                      CharacterLiteral("'b'")
                    RPAREN(")")
                block
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("y")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("7")
                    semis
                      NL("\n")
                  RCURL("}")
            semis
              NL("\n")
              NL("\n")
              NL("\n")
            classMemberDeclaration
              anonymousInitializer
                INIT("init")
                block
                  LCURL("{")
                  NL("\n")
                  statements
                    statement
                      assignment
                        directlyAssignableExpression
                          simpleIdentifier
                            Identifier("y")
                        ASSIGNMENT("=")
                        expression
                          disjunction
                            conjunction
                              equality
                                comparison
                                  infixOperation
                                    elvisExpression
                                      infixFunctionCall
                                        rangeExpression
                                          additiveExpression
                                            multiplicativeExpression
                                              asExpression
                                                prefixUnaryExpression
                                                  postfixUnaryExpression
                                                    primaryExpression
                                                      literalConstant
                                                        IntegerLiteral("8")
                    semis
                      NL("\n")
                  RCURL("}")
            semis
              NL("\n")
          RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
