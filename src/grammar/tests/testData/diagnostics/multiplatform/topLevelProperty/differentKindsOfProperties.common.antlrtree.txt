File: differentKindsOfProperties.common.kt
  packageHeader
  importList
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("justVal")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("justVar")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAL("val")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        DOT(".")
        variableDeclaration
          simpleIdentifier
            Identifier("extensionVal")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Unit")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAR("var")
        typeParameters
          LANGLE("<")
          typeParameter
            simpleIdentifier
              Identifier("T")
          RANGLE(">")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("T")
        DOT(".")
        variableDeclaration
          simpleIdentifier
            Identifier("genericExtensionVar")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("T")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("valWithGet")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        getter
          GETTER("get")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("varWithGetSet")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        getter
          GETTER("get")
        setter
          SETTER("set")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("varWithPlatformGetSet")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        getter
          modifiers
            modifier
              platformModifier
                EXPECT("expect")
          GETTER("get")
        NL("\n")
        setter
          modifiers
            modifier
              platformModifier
                EXPECT("expect")
          SETTER("set")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("backingFieldVal")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("no")
                                          QUOTE_CLOSE(""")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("backingFieldVar")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      stringLiteral
                                        lineStringLiteral
                                          QUOTE_OPEN(""")
                                          lineStringContent
                                            LineStrText("no")
                                          QUOTE_CLOSE(""")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("customAccessorVal")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        getter
          GETTER("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          stringLiteral
                                            lineStringLiteral
                                              QUOTE_OPEN(""")
                                              lineStringContent
                                                LineStrText("no")
                                              QUOTE_CLOSE(""")
    semis
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("customAccessorVar")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        getter
          GETTER("get")
          LPAREN("(")
          RPAREN(")")
          functionBody
            ASSIGNMENT("=")
            expression
              disjunction
                conjunction
                  equality
                    comparison
                      infixOperation
                        elvisExpression
                          infixFunctionCall
                            rangeExpression
                              additiveExpression
                                multiplicativeExpression
                                  asExpression
                                    prefixUnaryExpression
                                      postfixUnaryExpression
                                        primaryExpression
                                          stringLiteral
                                            lineStringLiteral
                                              QUOTE_OPEN(""")
                                              lineStringContent
                                                LineStrText("no")
                                              QUOTE_CLOSE(""")
        NL("\n")
        setter
          SETTER("set")
          LPAREN("(")
          setterParameter
            simpleIdentifier
              Identifier("value")
          RPAREN(")")
          functionBody
            block
              LCURL("{")
              statements
              RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
          modifier
            propertyModifier
              CONST("const")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("constVal")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Int")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
          modifier
            memberModifier
              LATEINIT("lateinit")
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("lateinitVar")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        NL("\n")
        NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        modifiers
          modifier
            platformModifier
              EXPECT("expect")
        VAL("val")
        variableDeclaration
          simpleIdentifier
            Identifier("delegated")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("String")
        propertyDelegate
          BY("by")
          expression
            disjunction
              conjunction
                equality
                  comparison
                    infixOperation
                      elvisExpression
                        infixFunctionCall
                          rangeExpression
                            additiveExpression
                              multiplicativeExpression
                                asExpression
                                  prefixUnaryExpression
                                    postfixUnaryExpression
                                      primaryExpression
                                        simpleIdentifier
                                          Identifier("Delegate")
        NL("\n")
  topLevelObject
    declaration
      objectDeclaration
        OBJECT("object")
        simpleIdentifier
          Identifier("Delegate")
        classBody
          LCURL("{")
          classMemberDeclarations
            classMemberDeclaration
              declaration
                functionDeclaration
                  modifiers
                    modifier
                      functionModifier
                        OPERATOR("operator")
                  FUN("fun")
                  simpleIdentifier
                    Identifier("getValue")
                  functionValueParameters
                    LPAREN("(")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("x")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Any")
                            quest
                              QUEST_NO_WS("?")
                    COMMA(",")
                    functionValueParameter
                      parameter
                        simpleIdentifier
                          Identifier("y")
                        COLON(":")
                        type
                          nullableType
                            typeReference
                              userType
                                simpleUserType
                                  simpleIdentifier
                                    Identifier("Any")
                            quest
                              QUEST_NO_WS("?")
                    RPAREN(")")
                  COLON(":")
                  type
                    typeReference
                      userType
                        simpleUserType
                          simpleIdentifier
                            Identifier("String")
                  functionBody
                    ASSIGNMENT("=")
                    expression
                      disjunction
                        conjunction
                          equality
                            comparison
                              infixOperation
                                elvisExpression
                                  infixFunctionCall
                                    rangeExpression
                                      additiveExpression
                                        multiplicativeExpression
                                          asExpression
                                            prefixUnaryExpression
                                              postfixUnaryExpression
                                                primaryExpression
                                                  stringLiteral
                                                    lineStringLiteral
                                                      QUOTE_OPEN(""")
                                                      QUOTE_CLOSE(""")
          RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("test")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
        COLON(":")
        type
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("String")
        functionBody
          block
            LCURL("{")
            NL("\n")
            statements
              statement
                declaration
                  propertyDeclaration
                    modifiers
                      modifier
                        platformModifier
                          EXPECT("expect")
                    VAL("val")
                    variableDeclaration
                      simpleIdentifier
                        Identifier("localVariable")
                      COLON(":")
                      type
                        typeReference
                          userType
                            simpleUserType
                              simpleIdentifier
                                Identifier("String")
              semis
                NL("\n")
              statement
                assignment
                  directlyAssignableExpression
                    simpleIdentifier
                      Identifier("localVariable")
                  ASSIGNMENT("=")
                  expression
                    disjunction
                      conjunction
                        equality
                          comparison
                            infixOperation
                              elvisExpression
                                infixFunctionCall
                                  rangeExpression
                                    additiveExpression
                                      multiplicativeExpression
                                        asExpression
                                          prefixUnaryExpression
                                            postfixUnaryExpression
                                              primaryExpression
                                                stringLiteral
                                                  lineStringLiteral
                                                    QUOTE_OPEN(""")
                                                    lineStringContent
                                                      LineStrText("no")
                                                    QUOTE_CLOSE(""")
              semis
                NL("\n")
              statement
                expression
                  disjunction
                    conjunction
                      equality
                        comparison
                          infixOperation
                            elvisExpression
                              infixFunctionCall
                                rangeExpression
                                  additiveExpression
                                    multiplicativeExpression
                                      asExpression
                                        prefixUnaryExpression
                                          postfixUnaryExpression
                                            primaryExpression
                                              jumpExpression
                                                RETURN("return")
                                                expression
                                                  disjunction
                                                    conjunction
                                                      equality
                                                        comparison
                                                          infixOperation
                                                            elvisExpression
                                                              infixFunctionCall
                                                                rangeExpression
                                                                  additiveExpression
                                                                    multiplicativeExpression
                                                                      asExpression
                                                                        prefixUnaryExpression
                                                                          postfixUnaryExpression
                                                                            primaryExpression
                                                                              simpleIdentifier
                                                                                Identifier("localVariable")
              semis
                NL("\n")
            RCURL("}")
    semis
      NL("\n")
  EOF("<EOF>")
