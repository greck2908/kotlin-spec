File: arrayBracketsRange.kt (WITH_ERRORS)
  packageHeader
    PACKAGE("package")
    identifier
      simpleIdentifier
        Identifier("b")
    semi
      NL("\n")
      NL("\n")
  importList
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        simpleIdentifier
          Identifier("main")
        functionValueParameters
          LPAREN("(")
          RPAREN(")")
  LCURL("{")
  NL("\n")
  topLevelObject
    declaration
      propertyDeclaration
        VAR("var")
        variableDeclaration
          simpleIdentifier
            Identifier("ints")
          COLON(":")
          type
            typeReference
              userType
                simpleUserType
                  simpleIdentifier
                    Identifier("Array")
                  typeArguments
                    LANGLE("<")
                    typeProjection
                      type
                        nullableType
                          typeReference
                            userType
                              simpleUserType
                                simpleIdentifier
                                  Identifier("Int")
                          quest
                            QUEST_NO_WS("?")
                    RANGLE(">")
        ASSIGNMENT("=")
        expression
          disjunction
            conjunction
              equality
                comparison
                  infixOperation
                    elvisExpression
                      infixFunctionCall
                        rangeExpression
                          additiveExpression
                            multiplicativeExpression
                              asExpression
                                prefixUnaryExpression
                                  postfixUnaryExpression
                                    primaryExpression
                                      simpleIdentifier
                                        Identifier("arrayOfNulls")
                                    postfixUnarySuffix
                                      typeArguments
                                        LANGLE("<")
                                        typeProjection
                                          type
                                            typeReference
                                              userType
                                                simpleUserType
                                                  simpleIdentifier
                                                    Identifier("Int")
                                        RANGLE(">")
                                    postfixUnarySuffix
                                      callSuffix
                                        valueArguments
                                          LPAREN("(")
                                          valueArgument
                                            expression
                                              disjunction
                                                conjunction
                                                  equality
                                                    comparison
                                                      infixOperation
                                                        elvisExpression
                                                          infixFunctionCall
                                                            rangeExpression
                                                              additiveExpression
                                                                multiplicativeExpression
                                                                  asExpression
                                                                    prefixUnaryExpression
                                                                      postfixUnaryExpression
                                                                        primaryExpression
                                                                          literalConstant
                                                                            IntegerLiteral("31")
                                          RPAREN(")")
    semis
      NL("\n")
      NL("\n")
  Identifier("ints")
  LSQUARE("[")
  IntegerLiteral("0")
  RSQUARE("]")
  ASSIGNMENT("=")
  IntegerLiteral("4")
  SEMICOLON(";")
  Identifier("ints")
  LSQUARE("[")
  IntegerLiteral("11")
  RSQUARE("]")
  ASSIGNMENT("=")
  IntegerLiteral("5")
  SEMICOLON(";")
  Identifier("ints")
  LSQUARE("[")
  IntegerLiteral("2")
  RSQUARE("]")
  ASSIGNMENT("=")
  IntegerLiteral("7")
  NL("\n")
  FOR("for")
  LPAREN("(")
  Identifier("i")
  IN("in")
  IntegerLiteral("0")
  RANGE("..")
  Identifier("ints")
  DOT(".")
  Identifier("size")
  RPAREN(")")
  NL("\n")
  Identifier("ints")
  LSQUARE("[")
  Identifier("i")
  RCURL("}")
