File: FunctionWithMissingNames.kt (WITH_ERRORS)
  packageHeader
  importList
  topLevelObject
    declaration
      classDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                constructorInvocation
                  userType
                    simpleUserType
                      simpleIdentifier
                        Identifier("Target")
                  valueArguments
                    LPAREN("(")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("AnnotationTarget")
                                                  postfixUnarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("TYPE")
                    COMMA(",")
                    valueArgument
                      expression
                        disjunction
                          conjunction
                            equality
                              comparison
                                infixOperation
                                  elvisExpression
                                    infixFunctionCall
                                      rangeExpression
                                        additiveExpression
                                          multiplicativeExpression
                                            asExpression
                                              prefixUnaryExpression
                                                postfixUnaryExpression
                                                  primaryExpression
                                                    simpleIdentifier
                                                      Identifier("AnnotationTarget")
                                                  postfixUnarySuffix
                                                    navigationSuffix
                                                      memberAccessOperator
                                                        DOT(".")
                                                      simpleIdentifier
                                                        Identifier("FUNCTION")
                    RPAREN(")")
            NL("\n")
          modifier
            classModifier
              ANNOTATION("annotation")
        CLASS("class")
        simpleIdentifier
          Identifier("a")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("A")
    semis
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        INTERFACE("interface")
        simpleIdentifier
          Identifier("B")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          LPAREN("(")
          RPAREN(")")
          LCURL("{")
          RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("A")
        DOT(".")
        LPAREN("(")
        RPAREN(")")
        LCURL("{")
        RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        modifiers
          annotation
            singleAnnotation
              AT("@")
              unescapedAnnotation
                userType
                  simpleUserType
                    simpleIdentifier
                      Identifier("a")
        FUN("fun")
        receiverType
          LPAREN("(")
          RPAREN(")")
          LCURL("{")
          RCURL("}")
        NL("\n")
  topLevelObject
    declaration
      functionDeclaration
        FUN("fun")
        receiverType
          typeModifiers
            typeModifier
              annotation
                singleAnnotation
                  AT("@")
                  unescapedAnnotation
                    userType
                      simpleUserType
                        simpleIdentifier
                          Identifier("a")
          typeReference
            userType
              simpleUserType
                simpleIdentifier
                  Identifier("A")
        DOT(".")
        LPAREN("(")
        RPAREN(")")
        LCURL("{")
        RCURL("}")
    semis
      NL("\n")
      NL("\n")
  topLevelObject
    declaration
      classDeclaration
        CLASS("class")
        simpleIdentifier
          Identifier("Outer")
  LCURL("{")
  NL("\n")
  FUN("fun")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  FUN("fun")
  Identifier("B")
  DOT(".")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  AT("@")
  Identifier("a")
  FUN("fun")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  FUN("fun")
  AT("@")
  Identifier("a")
  Identifier("A")
  DOT(".")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
  NL("\n")
  NL("\n")
  FUN("fun")
  Identifier("outerFun")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  NL("\n")
  FUN("fun")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  FUN("fun")
  Identifier("B")
  DOT(".")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  NL("\n")
  AT("@")
  Identifier("a")
  FUN("fun")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  FUN("fun")
  AT("@")
  Identifier("a")
  Identifier("A")
  DOT(".")
  LPAREN("(")
  RPAREN(")")
  LCURL("{")
  RCURL("}")
  NL("\n")
  RCURL("}")
